EMU8086 GENERATED LISTING. MACHINE CODE <- SOURCE.
 
restaurant2.exe_ -- emu8086 assembler version: 4.08  
 
[ 5/27/2021  --  8:33:47 PM ] 
 
===================================================================================================
[LINE]     LOC: MACHINE CODE                          SOURCE
===================================================================================================
 
[   1]        :                                       .model small
[   2]        :                                       .stack 100h
[   3]        :                                       .data
[   4]        :                                       
[   5]        :                                       ;strings
[   6]        :                                       
[   7]    0100: 0A 00 0D 00 09 00 09 00 57 65 6C 63   str0 dw 10,13,9,9,"Welcome To Comsats Restaurant$"
                6F 6D 65 20 54 6F 20 43 6F 6D 73 61 
                74 73 20 52 65 73 74 61 75 72 61 6E 
                74 24                               
[   8]        :                                       
[   9]    0126: 0A 00 0D 00 0A 00 0D 00 09 00 46 6F   str1 dw 10,13,10,13,9,"Food Menu",10,13,"$"
                6F 64 20 4D 65 6E 75 00 0A 00 0D 00 
                24 00                               
[  10]        :                                       
[  11]        :                                       
[  12]    0140: 0A 00 0D 00 2D 2D 2D 2D 2D 2D 2D 2D   str2 dw 10,13,"----------------------------","$"
                2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 
                2D 2D 2D 2D 2D 2D 2D 2D 24 00       
[  13]        :                                       
[  14]        :                                       
[  15]        :                                       
[  16]    0162: 0A 00 0D 00 0A 00 0D 00 09 00 41 70   str3 dw 10,13,10,13,9,"Appetizers$"
                70 65 74 69 7A 65 72 73 24 00       
[  17]    0178: 0A 00 0D 00 0A 00 0D 00 31 2E 4C 41   str4 dw 10,13,10,13, "1.LASAGNE 60/-",10,13,"2.MARGARITA 50/-",10,13,"3.SPAGHETTI 40/- $"
                53 41 47 4E 45 20 36 30 2F 2D 0A 00 
                0D 00 32 2E 4D 41 52 47 41 52 49 54 
                41 20 35 30 2F 2D 0A 00 0D 00 33 2E 
                53 50 41 47 48 45 54 54 49 20 34 30 
                2F 2D 20 24                         
[  18]        :                                       
[  19]    01B8: 0A 00 0D 00 0A 00 0D 00 09 00 4D 61   str5 dw 10,13,10,13,9,"Main Course$"
                69 6E 20 43 6F 75 72 73 65 24       
[  20]    01CE: 0A 00 0D 00 0A 00 0D 00 34 2E 53 48   str6 dw 10,13,10,13, "4.SHAHI BIRYANI 100/-",10,13,"5.BEEF QOURMA 150/-",10,13,"6.CHICKEN TIKKA 120/- $"
                41 48 49 20 42 49 52 59 41 4E 49 20 
                31 30 30 2F 2D 00 0A 00 0D 00 35 2E 
                42 45 45 46 20 51 4F 55 52 4D 41 20 
                31 35 30 2F 2D 00 0A 00 0D 00 36 2E 
                43 48 49 43 4B 45 4E 20 54 49 4B 4B 
                41 20 31 32 30 2F 2D 20 24 00       
[  21]        :                                       
[  22]    0220: 0A 00 0D 00 0A 00 0D 00 09 00 46 61   str7 dw 10,13,10,13,9,"Fast Food$"
                73 74 20 46 6F 6F 64 24             
[  23]    0234: 0A 00 0D 00 0A 00 0D 00 37 2E 50 49   str8 dw 10,13,10,13, "7.PIZZA 200/-",10,13,"8.BURGER 150/-$"
                5A 5A 41 20 32 30 30 2F 2D 00 0A 00 
                0D 00 38 2E 42 55 52 47 45 52 20 31 
                35 30 2F 2D 24 00                   
[  24]        :                                       
[  25]    025E: 0A 00 0D 00 0A 00 0D 00 2D 2D 2D 2D   str9 dw 10,13,10,13,"----------------------------","$"
                2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 
                2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 
                24 00                               
[  26]        :                                       
[  27]    0284: 0A 00 0D 00 50 72 65 73 73 20 31 2E   str10 dw 10,13,"Press 1. Add Menu",10,13,"Press 2. Order",10,13,"Press 3. Exit $"
                20 41 64 64 20 4D 65 6E 75 00 0A 00 
                0D 00 50 72 65 73 73 20 32 2E 20 4F 
                72 64 65 72 0A 00 0D 00 50 72 65 73 
                73 20 33 2E 20 45 78 69 74 20 24 00 
                                                    
[  28]        :                                       
[  29]    02C0: 0A 00 0D 00 0A 00 0D 00 59 6F 75 72   str11 dw 10,13,10,13,"Your Choice: $"
                20 43 68 6F 69 63 65 3A 20 24       
[  30]        :                                       
[  31]    02D6: 0A 00 0D 00 0A 00 0D 00 54 68 65 72   str12 dw 10,13,10,13, "There is no more than 8 items, but you can add one.$"
                65 20 69 73 20 6E 6F 20 6D 6F 72 65 
                20 74 68 61 6E 20 38 20 69 74 65 6D 
                73 2C 20 62 75 74 20 79 6F 75 20 63 
                61 6E 20 61 64 64 20 6F 6E 65 2E 24 
                                                    
[  32]        :                                       
[  33]    0312: 0A 00 0D 00 0A 00 0D 00 54 6F 20 61   str13 dw 10,13,10,13, "To add press 1 or press 2 to get back to menu: $"
                64 64 20 70 72 65 73 73 20 31 20 6F 
                72 20 70 72 65 73 73 20 32 20 74 6F 
                20 67 65 74 20 62 61 63 6B 20 74 6F 
                20 6D 65 6E 75 3A 20 24             
[  34]        :                                       
[  35]    034A: 0A 00 0D 00 0A 00 0D 00 45 6E 74 65   str14 dw 10,13,10,13, "Enter Food name: $"
                72 20 46 6F 6F 64 20 6E 61 6D 65 3A 
                20 24                               
[  36]    0364: 0A 00 0D 00 0A 00 0D 00 09 00 50 72   str15 dw 10,13,10,13,9,"Price: $"
                69 63 65 3A 20 24                   
[  37]        :                                       
[  38]    0376: 2F 2D 24 00                           str16 dw "/-$"
[  39]        :                                       
[  40]        :                                       
[  41]    037A: 0A 00 0D 00 0A 00 0D 00 53 65 6C 65   str17 dw 10,13,10,13, "Select the menu number: $"
                63 74 20 74 68 65 20 6D 65 6E 75 20 
                6E 75 6D 62 65 72 3A 20 24 00       
[  42]        :                                       
[  43]    039C: 0A 00 0D 00 0A 00 0D 00 45 6E 74 65   str18 dw 10,13,10,13, "Enter quantity: $"
                72 20 71 75 61 6E 74 69 74 79 3A 20 
                24 00                               
[  44]        :                                       
[  45]    03B6: 0A 00 0D 00 44 6F 20 79 6F 75 20 77   str19 dw 10,13,"Do you want to change your Order ?",10,13,"Press 1. Change Order",10,13,"Press any key to continue. $"
                61 6E 74 20 74 6F 20 63 68 61 6E 67 
                65 20 79 6F 75 72 20 4F 72 64 65 72 
                20 3F 0A 00 0D 00 50 72 65 73 73 20 
                31 2E 20 43 68 61 6E 67 65 20 4F 72 
                64 65 72 00 0A 00 0D 00 50 72 65 73 
                73 20 61 6E 79 20 6B 65 79 20 74 6F 
                20 63 6F 6E 74 69 6E 75 65 2E 20 24 
                                                    
[  46]        :                                       
[  47]        :                                       
[  48]    0416: 0A 00 0D 00 0A 00 0D 00 50 72 65 76   str20 dw 10,13,10,13,"Previous Total: $"
                69 6F 75 73 20 54 6F 74 61 6C 3A 20 
                24 00                               
[  49]        :                                       
[  50]        :                                       
[  51]    0430: 0A 00 0D 00 0A 00 0D 00 54 6F 74 61   str21 dw 10,13,10,13, "Total price: $"
                6C 20 70 72 69 63 65 3A 20 24       
[  52]        :                                       
[  53]    0446: 0A 00 0D 00 0A 00 0D 00 52 65 4F 72   str22 dw 10,13,10,13, "ReOrder : Press 1.$"
                64 65 72 3A 20 50 72 65 73 73 20 31 
                2E 24                               
[  54]    0460: 0A 00 0D 00 0A 00 0D 00 45 78 69 74   str23 dw 10,13,10,13, "Exit : Press Any key $"
                3A 20 50 72 65 73 73 20 41 6E 79 20 
                6B 65 79 20 24 00                   
[  55]        :                                       
[  56]        :                                       
[  57]    047E: 0A 00 0D 00 0A 00 0D 00 09 00 2A 2A   str24 dw 10,13,10,13,9, "*****THANK YOU*****$"
                2A 2A 2A 54 48 41 4E 4B 20 59 4F 55 
                2A 2A 2A 2A 2A 24                   
[  58]        :                                       
[  59]        :                                       
[  60]        :                                       
[  61]        :                                       
[  62]        :                                       ;variables
[  63]        :                                       
[  64]    049C: 00                                    choice db 0
[  65]        :                                       
[  66]    049D: 08                                    v db 8
[  67]        :                                       
[  68]    049E: 3C 00                                 lasprice dw 60
[  69]    04A0: 32 00                                 margprice dw 50
[  70]    04A2: 28 00                                 spagprice dw 40
[  71]        :                                       
[  72]    04A4: 64 00                                 birprice dw 100
[  73]    04A6: 96 00                                 beefprice dw 150
[  74]    04A8: 78 00                                 tikkaprice dw 120
[  75]        :                                       
[  76]    04AA: C8 00                                 pizzaprice dw 200
[  77]    04AC: 96 00                                 burgerprice dw 150
[  78]        :                                       
[  79]    04AE: 00 00                                 nprice dw 0
[  80]        :                                       
[  81]    04B0: 00 00                                 totPrice dw 0
[  82]    04B2: 00 00                                 prevPrice dw 0
[  83]        :                                       
[  84]    04B4: 24 24 24 24 24 24 24 24 24 24 24 24   var1 db 100 dup('$')
                24 24 24 24 24 24 24 24 24 24 24 24 
                24 24 24 24 24 24 24 24 24 24 24 24 
                24 24 24 24 24 24 24 24 24 24 24 24 
                24 24 24 24 24 24 24 24 24 24 24 24 
                24 24 24 24 24 24 24 24 24 24 24 24 
                24 24 24 24 24 24 24 24 24 24 24 24 
                24 24 24 24 24 24 24 24 24 24 24 24 
                24 24 24 24                         
[  85]        :                                       
[  86]        :                                       
[  87]        :                                       ;customer strings and data
[  88]        :                                       
[  89]    0518: 24 24 24 24 24 24 24 24 24 24 24 24   nameArr db 100 dup('$')
                24 24 24 24 24 24 24 24 24 24 24 24 
                24 24 24 24 24 24 24 24 24 24 24 24 
                24 24 24 24 24 24 24 24 24 24 24 24 
                24 24 24 24 24 24 24 24 24 24 24 24 
                24 24 24 24 24 24 24 24 24 24 24 24 
                24 24 24 24 24 24 24 24 24 24 24 24 
                24 24 24 24 24 24 24 24 24 24 24 24 
                24 24 24 24                         
[  90]        :                                       
[  91]    057C: 01                                    customerID db 1
[  92]        :                                       
[  93]    057D: 00                                    foodOrderID db 0
[  94]        :                                       
[  95]    057E: 0A 0D 0A 0D 20 45 6E 74 65 72 20 79   c1 db 10,13,10,13," Enter your name: $"
                6F 75 72 20 6E 61 6D 65 3A 20 24    
[  96]        :                                       
[  97]    0595: 0A 0D 20 4E 61 6D 65 3A 20 24         c2 db 10,13," Name: $"
[  98]        :                                       
[  99]    059F: 0A 0D 0A 0D 20 43 75 73 74 6F 6D 65   c3 db 10,13,10,13," Customer ID: $"
                72 20 49 44 3A 20 24                
[ 100]        :                                       
[ 101]    05B2: 0A 0D 0A 0D 20 46 6F 6F 64 20 4F 72   c4 db 10,13,10,13," Food Order ID: $"
                64 65 72 20 49 44 3A 20 24          
[ 102]        :                                       
[ 103]        :                                       
[ 104]        :                                       
[ 105]        :                                       
[ 106]        :                                       .code
[ 107]        :                                       
[ 108]    05D0:                                       main proc
[ 109]        :                                       
[ 110]    05D0: B8 10 00                              mov ax,@data
[ 111]    05D3: 8E D8                                 mov ds,ax
[ 112]        :                                       
[ 113]    05D5: B4 09                                 mov ah,9
[ 114]    05D7: BA 00 00                              Lea dx,str0
[ 115]    05DA: CD 21                                 int 21h
[ 116]        :                                       
[ 117]    05DC: B4 09                                 mov ah, 9
[ 118]    05DE: BA 7E 04                              lea dx, c1
[ 119]    05E1: CD 21                                 int 21h
[ 120]        :                                       
[ 121]    05E3: B4 01                                 mov ah, 1
[ 122]        :                                       
[ 123]    05E5: BE 18 04                              lea si, nameArr
[ 124]        :                                       
[ 125]    05E8: CD 21                                 int 21h
[ 126]        :                                       
[ 127]    05EA:                                       inputName:
[ 128]        :                                       
[ 129]    05EA: 3C 0D                                 cmp al, 13
[ 130]    05EC: 74 07                                 je start
[ 131]        :                                       
[ 132]    05EE: 88 04                                 mov [si], al
[ 133]        :                                       
[ 134]    05F0: 46                                    inc si
[ 135]        :                                       
[ 136]    05F1: CD 21                                 int 21h
[ 137]        :                                       
[ 138]    05F3: EB F5                                 jmp inputName
[ 139]        :                                       
[ 140]        :                                       
[ 141]        :                                       
[ 142]    05F5:                                       start:
[ 143]        :                                       
[ 144]    05F5: B4 09                                 mov ah,9
[ 145]    05F7: BA 26 00                              Lea dx,str1
[ 146]    05FA: CD 21                                 int 21h
[ 147]        :                                       
[ 148]    05FC: FE 06 7D 04                           inc foodOrderID
[ 149]        :                                       
[ 150]    0600: 80 3E 9D 03 08                        cmp v,8
[ 151]    0605: 7E 03 E9 CE 00                        jg start1
[ 152]        :                                       
[ 153]        :                                       
[ 154]        :                                       
[ 155]    060A:                                       menu:
[ 156]        :                                       
[ 157]    060A: B4 09                                 mov ah, 9
[ 158]    060C: BA 40 00                              lea dx,str2
[ 159]    060F: CD 21                                 int 21h
[ 160]        :                                       
[ 161]    0611: B4 09                                 mov ah,9
[ 162]    0613: BA 62 00                              lea dx, str3
[ 163]    0616: CD 21                                 int 21h
[ 164]        :                                       
[ 165]    0618: BA 78 00                              Lea dx,str4
[ 166]    061B: CD 21                                 int 21h
[ 167]        :                                       
[ 168]    061D: BA B8 00                              lea dx,str5
[ 169]    0620: CD 21                                 int 21h
[ 170]        :                                       
[ 171]    0622: BA CE 00                              lea dx, str6
[ 172]    0625: CD 21                                 int 21h
[ 173]        :                                       
[ 174]    0627: BA 20 01                              lea dx, str7
[ 175]    062A: CD 21                                 int 21h
[ 176]        :                                       
[ 177]    062C: BA 34 01                              lea dx, str8
[ 178]    062F: CD 21                                 int 21h
[ 179]        :                                       
[ 180]    0631: B4 09                                 mov ah, 9
[ 181]    0633: BA 5E 01                              lea dx,str9
[ 182]    0636: CD 21                                 int 21h
[ 183]        :                                       
[ 184]    0638: B4 09                                 mov ah, 9
[ 185]    063A: BA 84 01                              lea dx, str10
[ 186]    063D: CD 21                                 int 21h
[ 187]        :                                       
[ 188]    063F: B4 09                                 mov ah, 9
[ 189]    0641: BA C0 01                              lea dx, str11
[ 190]    0644: CD 21                                 int 21h
[ 191]        :                                       
[ 192]    0646: B4 01                                 mov ah, 1
[ 193]    0648: CD 21                                 int 21h
[ 194]        :                                       
[ 195]    064A:                                       intiMenu:
[ 196]        :                                       
[ 197]    064A: A2 9C 03                              mov choice, al
[ 198]        :                                       
[ 199]    064D: 80 3E 9C 03 32                        cmp choice, 50
[ 200]    0652: 75 43                                 jne menuadd
[ 201]        :                                       
[ 202]    0654: B4 09                                 mov ah,9
[ 203]    0656: BA 7A 02                              Lea dx,str17
[ 204]    0659: CD 21                                 int 21h
[ 205]        :                                       
[ 206]    065B: B4 01                                 mov ah,1
[ 207]    065D: CD 21                                 int 21h
[ 208]        :                                       
[ 209]    065F: 3C 31                                 cmp al,31h
[ 210]    0661: 75 03 E9 87 01                        je lasagn
[ 211]    0666: 3C 32                                 cmp al,32h
[ 212]    0668: 75 03 E9 58 01                        je marga
[ 213]    066D: 3C 33                                 cmp al,33h
[ 214]    066F: 75 03 E9 A1 01                        je sapaghetti
[ 215]    0674: 3C 34                                 cmp al, 34h
[ 216]    0676: 75 03 E9 C2 01                        je biryani
[ 217]        :                                       
[ 218]    067B: 3C 35                                 cmp al, 35h
[ 219]    067D: 75 03 E9 E3 01                        je beef
[ 220]        :                                       
[ 221]        :                                       
[ 222]    0682: 3C 36                                 cmp al, 36h
[ 223]    0684: 75 03 E9 04 02                        je tikka
[ 224]        :                                       
[ 225]    0689: 3C 37                                 cmp al, 37h
[ 226]    068B: 75 03 E9 24 02                        je pizza
[ 227]        :                                       
[ 228]    0690: 3C 38                                 cmp al, 38h
[ 229]    0692: 75 03 E9 44 02                        je burger
[ 230]        :                                       
[ 231]        :                                       
[ 232]    0697:                                       menuadd:
[ 233]        :                                       
[ 234]    0697: 80 3E 9C 03 31                        cmp choice, 49
[ 235]    069C: 74 03 E9 29 03                        jne FExit
[ 236]        :                                       
[ 237]    06A1: FE 06 9D 03                           inc v
[ 238]        :                                       
[ 239]    06A5: B4 09                                 mov ah,9
[ 240]    06A7: BA D6 01                              Lea dx,str12
[ 241]    06AA: CD 21                                 int 21h
[ 242]        :                                       
[ 243]    06AC: B4 09                                 mov ah,9
[ 244]    06AE: BA 12 02                              Lea dx,str13
[ 245]    06B1: CD 21                                 int 21h
[ 246]        :                                       
[ 247]    06B3: B4 01                                 mov ah,1
[ 248]    06B5: CD 21                                 int 21h
[ 249]    06B7: 3C 32                                 cmp al,32h
[ 250]    06B9: 75 03 E9 4C FF                        je menu
[ 251]        :                                       
[ 252]    06BE: B4 09                                 mov ah,9
[ 253]    06C0: BA 4A 02                              Lea dx,str14
[ 254]    06C3: CD 21                                 int 21h
[ 255]        :                                       
[ 256]    06C5: BE B4 03                              mov si,offset var1
[ 257]        :                                       
[ 258]    06C8:                                       l1:
[ 259]    06C8: B4 01                                 mov ah,1
[ 260]    06CA: CD 21                                 int 21h
[ 261]    06CC: 3C 0D                                 cmp al,13
[ 262]    06CE: 74 05                                 je print
[ 263]    06D0: 88 04                                 mov [si],al
[ 264]    06D2: 46                                    inc si
[ 265]    06D3: EB F3                                 jmp l1
[ 266]        :                                       
[ 267]    06D5:                                       print:
[ 268]        :                                       
[ 269]    06D5: E8 2A 02                              call price
[ 270]        :                                       
[ 271]    06D8:                                       start1:
[ 272]        :                                       
[ 273]    06D8: B4 09                                 mov ah, 9
[ 274]    06DA: BA 40 00                              lea dx,str2
[ 275]    06DD: CD 21                                 int 21h
[ 276]        :                                       
[ 277]        :                                       
[ 278]    06DF: B4 09                                 mov ah,9
[ 279]    06E1: BA 62 00                              lea dx, str3
[ 280]    06E4: CD 21                                 int 21h
[ 281]        :                                       
[ 282]    06E6: BA 78 00                              Lea dx,str4
[ 283]    06E9: CD 21                                 int 21h
[ 284]        :                                       
[ 285]    06EB: BA B8 00                              lea dx,str5
[ 286]    06EE: CD 21                                 int 21h
[ 287]        :                                       
[ 288]    06F0: BA CE 00                              lea dx, str6
[ 289]    06F3: CD 21                                 int 21h
[ 290]        :                                       
[ 291]    06F5: BA 20 01                              lea dx, str7
[ 292]    06F8: CD 21                                 int 21h
[ 293]        :                                       
[ 294]    06FA: BA 34 01                              lea dx, str8
[ 295]    06FD: CD 21                                 int 21h
[ 296]        :                                       
[ 297]        :                                       
[ 298]        :                                       
[ 299]    06FF: B4 02                                 mov ah,2
[ 300]        :                                       
[ 301]    0701: B2 0A                                 mov dl, 10
[ 302]    0703: CD 21                                 int 21h
[ 303]        :                                       
[ 304]    0705: B2 0D                                 mov dl, 13
[ 305]    0707: CD 21                                 int 21h
[ 306]        :                                       
[ 307]    0709: B4 02                                 mov ah,2
[ 308]    070B: B2 20                                 mov dl,' '
[ 309]    070D: CD 21                                 int 21h
[ 310]        :                                       
[ 311]        :                                       
[ 312]    070F: 8A 16 9D 03                           mov dl,v
[ 313]    0713: 80 C2 30                              add dl, 48
[ 314]    0716: CD 21                                 int 21h
[ 315]        :                                       
[ 316]    0718: B4 02                                 mov ah,2
[ 317]    071A: B2 2E                                 mov dl,'.'
[ 318]    071C: CD 21                                 int 21h
[ 319]        :                                       
[ 320]        :                                       
[ 321]    071E: BA B4 03                              mov dx,offset var1
[ 322]    0721: B4 09                                 mov ah,9
[ 323]    0723: CD 21                                 int 21h
[ 324]        :                                       
[ 325]    0725: B4 02                                 mov ah,2
[ 326]    0727: B2 20                                 mov dl,' '
[ 327]    0729: CD 21                                 int 21h
[ 328]        :                                       
[ 329]    072B: 33 C0                                 xor ax,ax
[ 330]    072D: A1 AE 03                              mov ax,nprice
[ 331]    0730: E8 F0 02                              call decimalOutput
[ 332]        :                                       
[ 333]        :                                       
[ 334]        :                                       
[ 335]    0733: B4 09                                 mov ah,9
[ 336]    0735: BA 76 02                              Lea dx,str16
[ 337]    0738: CD 21                                 int 21h
[ 338]        :                                       
[ 339]        :                                       
[ 340]    073A: B4 09                                 mov ah, 9
[ 341]    073C: BA 5E 01                              lea dx,str9
[ 342]    073F: CD 21                                 int 21h
[ 343]        :                                       
[ 344]    0741: B4 09                                 mov ah, 9
[ 345]    0743: BA 84 01                              lea dx, str10
[ 346]    0746: CD 21                                 int 21h
[ 347]        :                                       
[ 348]    0748: B4 09                                 mov ah, 9
[ 349]    074A: BA C0 01                              lea dx, str11
[ 350]    074D: CD 21                                 int 21h
[ 351]        :                                       
[ 352]    074F: B4 01                                 mov ah, 1
[ 353]    0751: CD 21                                 int 21h
[ 354]        :                                       
[ 355]    0753: A2 9C 03                              mov choice, al
[ 356]        :                                       
[ 357]    0756: 80 3E 9C 03 32                        cmp choice, 50
[ 358]    075B: 74 03 E9 37 FF                        jne menuadd
[ 359]        :                                       
[ 360]    0760: B4 09                                 mov ah,9
[ 361]    0762: BA 7A 02                              Lea dx,str17
[ 362]    0765: CD 21                                 int 21h
[ 363]        :                                       
[ 364]    0767: B4 01                                 mov ah,1
[ 365]    0769: CD 21                                 int 21h
[ 366]        :                                       
[ 367]    076B: 3C 31                                 cmp al,31h
[ 368]    076D: 74 7E                                 je lasagn
[ 369]    076F: 3C 32                                 cmp al,32h
[ 370]    0771: 74 52                                 je marga
[ 371]    0773: 3C 33                                 cmp al,33h
[ 372]    0775: 75 03 E9 9B 00                        je sapaghetti
[ 373]    077A: 3C 34                                 cmp al, 34h
[ 374]    077C: 75 03 E9 BC 00                        je biryani
[ 375]        :                                       
[ 376]    0781: 3C 35                                 cmp al, 35h
[ 377]    0783: 75 03 E9 DD 00                        je beef
[ 378]        :                                       
[ 379]        :                                       
[ 380]    0788: 3C 36                                 cmp al, 36h
[ 381]    078A: 75 03 E9 FE 00                        je tikka
[ 382]        :                                       
[ 383]    078F: 3C 37                                 cmp al, 37h
[ 384]    0791: 75 03 E9 1E 01                        je pizza
[ 385]        :                                       
[ 386]    0796: 3C 38                                 cmp al, 38h
[ 387]    0798: 75 03 E9 3E 01                        je burger
[ 388]        :                                       
[ 389]        :                                       
[ 390]    079D:                                       newmenu_:
[ 391]        :                                       
[ 392]    079D: B4 09                                 mov ah,9
[ 393]    079F: BA 9C 02                              Lea dx,str18
[ 394]    07A2: CD 21                                 int 21h
[ 395]        :                                       
[ 396]    07A4: 33 C0                                 xor ax,ax
[ 397]        :                                       
[ 398]    07A6: E8 25 02                              call decimalInput
[ 399]        :                                       
[ 400]        :                                       
[ 401]    07A9: 8B D8                                 mov bx, ax
[ 402]        :                                       
[ 403]    07AB: B4 09                                 mov ah, 9
[ 404]    07AD: BA B6 02                              lea dx, str19
[ 405]    07B0: CD 21                                 int 21h
[ 406]        :                                       
[ 407]    07B2: B4 01                                 mov ah, 1
[ 408]    07B4: CD 21                                 int 21h
[ 409]        :                                       
[ 410]    07B6: 3C 31                                 cmp al, '1'
[ 411]    07B8: 74 E3                                 je newmenu_
[ 412]        :                                       
[ 413]    07BA: 8B C3                                 mov ax, bx
[ 414]        :                                       
[ 415]        :                                       
[ 416]    07BC: F7 26 AE 03                           mul nprice
[ 417]        :                                       
[ 418]    07C0: 8B D8                                 mov bx,ax
[ 419]        :                                       
[ 420]    07C2: E9 6B 01                              jmp totalprice
[ 421]        :                                       
[ 422]        :                                       
[ 423]    07C5:                                       marga:
[ 424]        :                                       
[ 425]    07C5: B4 09                                 mov ah,9
[ 426]    07C7: BA 9C 02                              Lea dx,str18
[ 427]    07CA: CD 21                                 int 21h
[ 428]        :                                       
[ 429]    07CC: 33 C0                                 xor ax,ax
[ 430]        :                                       
[ 431]    07CE: E8 FD 01                              call decimalInput
[ 432]        :                                       
[ 433]    07D1: 8B D8                                 mov bx, ax
[ 434]        :                                       
[ 435]    07D3: B4 09                                 mov ah, 9
[ 436]    07D5: BA B6 02                              lea dx, str19
[ 437]    07D8: CD 21                                 int 21h
[ 438]        :                                       
[ 439]    07DA: B4 01                                 mov ah, 1
[ 440]    07DC: CD 21                                 int 21h
[ 441]        :                                       
[ 442]    07DE: 3C 31                                 cmp al, '1'
[ 443]    07E0: 74 E3                                 je marga
[ 444]        :                                       
[ 445]    07E2: 8B C3                                 mov ax, bx
[ 446]        :                                       
[ 447]    07E4: F7 26 A0 03                           mul margprice
[ 448]        :                                       
[ 449]    07E8: 8B D8                                 mov bx,ax
[ 450]        :                                       
[ 451]    07EA: E9 43 01                              jmp totalprice
[ 452]        :                                       
[ 453]    07ED:                                       lasagn:
[ 454]        :                                       
[ 455]    07ED: B4 09                                 mov ah,9
[ 456]    07EF: BA 9C 02                              Lea dx,str18
[ 457]    07F2: CD 21                                 int 21h
[ 458]        :                                       
[ 459]    07F4: 33 C0                                 xor ax,ax
[ 460]        :                                       
[ 461]    07F6: E8 D5 01                              call decimalInput
[ 462]        :                                       
[ 463]    07F9: 8B D8                                 mov bx, ax
[ 464]        :                                       
[ 465]    07FB: B4 09                                 mov ah, 9
[ 466]    07FD: BA B6 02                              lea dx, str19
[ 467]    0800: CD 21                                 int 21h
[ 468]        :                                       
[ 469]    0802: B4 01                                 mov ah, 1
[ 470]    0804: CD 21                                 int 21h
[ 471]        :                                       
[ 472]    0806: 3C 31                                 cmp al, '1'
[ 473]    0808: 74 E3                                 je lasagn
[ 474]        :                                       
[ 475]    080A: 8B C3                                 mov ax, bx
[ 476]        :                                       
[ 477]        :                                       
[ 478]        :                                       
[ 479]    080C: F7 26 9E 03                           mul lasprice
[ 480]        :                                       
[ 481]    0810: 8B D8                                 mov bx,ax
[ 482]        :                                       
[ 483]    0812: E9 1B 01                              jmp totalprice
[ 484]        :                                       
[ 485]    0815:                                       sapaghetti:
[ 486]        :                                       
[ 487]    0815: B4 09                                 mov ah,9
[ 488]    0817: BA 9C 02                              Lea dx,str18
[ 489]    081A: CD 21                                 int 21h
[ 490]        :                                       
[ 491]    081C: 33 C0                                 xor ax,ax
[ 492]        :                                       
[ 493]    081E: E8 AD 01                              call decimalInput
[ 494]        :                                       
[ 495]    0821: 8B D8                                 mov bx, ax
[ 496]        :                                       
[ 497]    0823: B4 09                                 mov ah, 9
[ 498]    0825: BA B6 02                              lea dx, str19
[ 499]    0828: CD 21                                 int 21h
[ 500]        :                                       
[ 501]    082A: B4 01                                 mov ah, 1
[ 502]    082C: CD 21                                 int 21h
[ 503]        :                                       
[ 504]    082E: 3C 31                                 cmp al, '1'
[ 505]    0830: 74 E3                                 je sapaghetti
[ 506]        :                                       
[ 507]    0832: 8B C3                                 mov ax, bx
[ 508]        :                                       
[ 509]        :                                       
[ 510]    0834: F7 26 A2 03                           mul spagprice
[ 511]        :                                       
[ 512]    0838: 8B D8                                 mov bx,ax
[ 513]        :                                       
[ 514]    083A: E9 F3 00                              jmp totalprice
[ 515]        :                                       
[ 516]        :                                       
[ 517]        :                                       
[ 518]    083D:                                       biryani:
[ 519]    083D: B4 09                                 mov ah,9
[ 520]    083F: BA 9C 02                              Lea dx,str18
[ 521]    0842: CD 21                                 int 21h
[ 522]        :                                       
[ 523]    0844: 33 C0                                 xor ax,ax
[ 524]        :                                       
[ 525]    0846: E8 85 01                              call decimalInput
[ 526]        :                                       
[ 527]    0849: 8B D8                                 mov bx, ax
[ 528]        :                                       
[ 529]    084B: B4 09                                 mov ah, 9
[ 530]    084D: BA B6 02                              lea dx, str19
[ 531]    0850: CD 21                                 int 21h
[ 532]        :                                       
[ 533]    0852: B4 01                                 mov ah, 1
[ 534]    0854: CD 21                                 int 21h
[ 535]        :                                       
[ 536]    0856: 3C 31                                 cmp al, '1'
[ 537]    0858: 74 E3                                 je biryani
[ 538]        :                                       
[ 539]    085A: 8B C3                                 mov ax, bx
[ 540]        :                                       
[ 541]        :                                       
[ 542]    085C: F7 26 A4 03                           mul birprice
[ 543]        :                                       
[ 544]    0860: 8B D8                                 mov bx,ax
[ 545]        :                                       
[ 546]    0862: E9 CB 00                              jmp totalprice
[ 547]        :                                       
[ 548]        :                                       
[ 549]        :                                       
[ 550]    0865:                                       beef:
[ 551]    0865: B4 09                                 mov ah,9
[ 552]    0867: BA 9C 02                              Lea dx,str18
[ 553]    086A: CD 21                                 int 21h
[ 554]        :                                       
[ 555]    086C: 33 C0                                 xor ax,ax
[ 556]        :                                       
[ 557]    086E: E8 5D 01                              call decimalInput
[ 558]        :                                       
[ 559]    0871: 8B D8                                 mov bx, ax
[ 560]        :                                       
[ 561]    0873: B4 09                                 mov ah, 9
[ 562]    0875: BA B6 02                              lea dx, str19
[ 563]    0878: CD 21                                 int 21h
[ 564]        :                                       
[ 565]    087A: B4 01                                 mov ah, 1
[ 566]    087C: CD 21                                 int 21h
[ 567]        :                                       
[ 568]    087E: 3C 31                                 cmp al, '1'
[ 569]    0880: 74 E3                                 je beef
[ 570]        :                                       
[ 571]    0882: 8B C3                                 mov ax, bx
[ 572]        :                                       
[ 573]        :                                       
[ 574]    0884: F7 26 A6 03                           mul beefprice
[ 575]        :                                       
[ 576]    0888: 8B D8                                 mov bx,ax
[ 577]        :                                       
[ 578]    088A: E9 A3 00                              jmp totalprice
[ 579]        :                                       
[ 580]    088D:                                       tikka:
[ 581]    088D: B4 09                                 mov ah,9
[ 582]    088F: BA 9C 02                              Lea dx,str18
[ 583]    0892: CD 21                                 int 21h
[ 584]        :                                       
[ 585]    0894: 33 C0                                 xor ax,ax
[ 586]        :                                       
[ 587]    0896: E8 35 01                              call decimalInput
[ 588]        :                                       
[ 589]    0899: 8B D8                                 mov bx, ax
[ 590]        :                                       
[ 591]    089B: B4 09                                 mov ah, 9
[ 592]    089D: BA B6 02                              lea dx, str19
[ 593]    08A0: CD 21                                 int 21h
[ 594]        :                                       
[ 595]    08A2: B4 01                                 mov ah, 1
[ 596]    08A4: CD 21                                 int 21h
[ 597]        :                                       
[ 598]    08A6: 3C 31                                 cmp al, '1'
[ 599]    08A8: 74 E3                                 je tikka
[ 600]        :                                       
[ 601]    08AA: 8B C3                                 mov ax, bx
[ 602]        :                                       
[ 603]        :                                       
[ 604]    08AC: F7 26 A8 03                           mul tikkaprice
[ 605]        :                                       
[ 606]    08B0: 8B D8                                 mov bx,ax
[ 607]        :                                       
[ 608]    08B2: EB 7C                                 jmp totalprice
[ 609]        :                                       
[ 610]    08B4:                                       pizza:
[ 611]    08B4: B4 09                                 mov ah,9
[ 612]    08B6: BA 9C 02                              Lea dx,str18
[ 613]    08B9: CD 21                                 int 21h
[ 614]        :                                       
[ 615]    08BB: 33 C0                                 xor ax,ax
[ 616]        :                                       
[ 617]    08BD: E8 0E 01                              call decimalInput
[ 618]        :                                       
[ 619]    08C0: 8B D8                                 mov bx, ax
[ 620]        :                                       
[ 621]    08C2: B4 09                                 mov ah, 9
[ 622]    08C4: BA B6 02                              lea dx, str19
[ 623]    08C7: CD 21                                 int 21h
[ 624]        :                                       
[ 625]    08C9: B4 01                                 mov ah, 1
[ 626]    08CB: CD 21                                 int 21h
[ 627]        :                                       
[ 628]    08CD: 3C 31                                 cmp al, '1'
[ 629]    08CF: 74 E3                                 je pizza
[ 630]        :                                       
[ 631]    08D1: 8B C3                                 mov ax, bx
[ 632]        :                                       
[ 633]        :                                       
[ 634]    08D3: F7 26 AA 03                           mul pizzaprice
[ 635]        :                                       
[ 636]    08D7: 8B D8                                 mov bx,ax
[ 637]        :                                       
[ 638]    08D9: EB 55                                 jmp totalprice
[ 639]        :                                       
[ 640]    08DB:                                       burger:
[ 641]    08DB: B4 09                                 mov ah,9
[ 642]    08DD: BA 9C 02                              Lea dx,str18
[ 643]    08E0: CD 21                                 int 21h
[ 644]        :                                       
[ 645]    08E2: 33 C0                                 xor ax,ax
[ 646]        :                                       
[ 647]    08E4: E8 E7 00                              call decimalInput
[ 648]        :                                       
[ 649]    08E7: 8B D8                                 mov bx, ax
[ 650]        :                                       
[ 651]    08E9: B4 09                                 mov ah, 9
[ 652]    08EB: BA B6 02                              lea dx, str19
[ 653]    08EE: CD 21                                 int 21h
[ 654]        :                                       
[ 655]    08F0: B4 01                                 mov ah, 1
[ 656]    08F2: CD 21                                 int 21h
[ 657]        :                                       
[ 658]    08F4: 3C 31                                 cmp al, '1'
[ 659]    08F6: 74 E3                                 je burger
[ 660]        :                                       
[ 661]    08F8: 8B C3                                 mov ax, bx
[ 662]        :                                       
[ 663]        :                                       
[ 664]    08FA: F7 26 AC 03                           mul burgerprice
[ 665]        :                                       
[ 666]    08FE: 8B D8                                 mov bx,ax
[ 667]        :                                       
[ 668]    0900: EB 2E                                 jmp totalprice
[ 669]        :                                       
[ 670]        :                                       
[ 671]    0902:                                       price:
[ 672]        :                                       
[ 673]    0902: B4 09                                 mov ah,9
[ 674]    0904: BA 64 02                              Lea dx,str15
[ 675]    0907: CD 21                                 int 21h
[ 676]        :                                       
[ 677]    0909: B8 00 00                              mov ax,0
[ 678]    090C: BB 00 00                              mov bx,0
[ 679]    090F: B9 00 00                              mov cx,0
[ 680]    0912: BA 00 00                              mov dx,0
[ 681]        :                                       
[ 682]    0915:                                       input:
[ 683]    0915: 25 0F 00                              and ax,000Fh
[ 684]    0918: 50                                    push ax
[ 685]    0919: B8 0A 00                              mov ax,10
[ 686]    091C: F7 E3                                 mul bx
[ 687]    091E: 8B D8                                 mov bx,ax
[ 688]    0920: 58                                    pop ax
[ 689]    0921: 03 D8                                 add bx,ax
[ 690]        :                                       
[ 691]    0923: B4 01                                 mov ah,1
[ 692]    0925: CD 21                                 int 21h
[ 693]        :                                       
[ 694]    0927: 3C 0D                                 cmp al,0Dh
[ 695]    0929: 75 EA                                 jne input
[ 696]        :                                       
[ 697]    092B: 01 1E AE 03                           add nprice,bx
[ 698]    092F: C3                                    ret
[ 699]        :                                       
[ 700]        :                                       
[ 701]        :                                       
[ 702]    0930:                                       totalprice:
[ 703]        :                                       
[ 704]    0930: A1 B0 03                              mov ax, totPrice
[ 705]    0933: A3 B2 03                              mov prevPrice, ax
[ 706]    0936: 01 1E B0 03                           add totPrice, bx
[ 707]        :                                       
[ 708]    093A: B4 02                                 mov ah, 2
[ 709]    093C: B2 0A                                 mov dl, 10
[ 710]    093E: CD 21                                 int 21h
[ 711]        :                                       
[ 712]    0940: B2 0D                                 mov dl, 13
[ 713]    0942: CD 21                                 int 21h
[ 714]        :                                       
[ 715]    0944: B4 09                                 mov ah, 9
[ 716]    0946: BA 40 00                              lea dx, str2
[ 717]    0949: CD 21                                 int 21h
[ 718]        :                                       
[ 719]    094B: B4 02                                 mov ah, 2
[ 720]    094D: B2 20                                 mov dl, ' '
[ 721]    094F: CD 21                                 int 21h
[ 722]        :                                       
[ 723]    0951: B4 09                                 mov ah, 9
[ 724]        :                                       
[ 725]    0953: BA 95 04                              lea dx, c2
[ 726]    0956: CD 21                                 int 21h
[ 727]        :                                       
[ 728]    0958: BA 18 04                              lea dx, nameArr
[ 729]    095B: CD 21                                 int 21h
[ 730]        :                                       
[ 731]    095D: B4 02                                 mov ah, 2
[ 732]    095F: B2 20                                 mov dl, ' '
[ 733]    0961: CD 21                                 int 21h
[ 734]        :                                       
[ 735]    0963: B4 09                                 mov ah, 9
[ 736]        :                                       
[ 737]    0965: BA 9F 04                              lea dx, c3
[ 738]    0968: CD 21                                 int 21h
[ 739]        :                                       
[ 740]    096A: B4 02                                 mov ah, 2
[ 741]    096C: 8A 16 7C 04                           mov dl, customerID
[ 742]    0970: 80 C2 30                              add dl, 48
[ 743]    0973: CD 21                                 int 21h
[ 744]        :                                       
[ 745]    0975: B4 09                                 mov ah, 9
[ 746]    0977: BA B2 04                              lea dx, c4
[ 747]    097A: CD 21                                 int 21h
[ 748]        :                                       
[ 749]    097C: B4 02                                 mov ah, 2
[ 750]    097E: 8A 16 7D 04                           mov dl, foodOrderID
[ 751]    0982: 80 C2 30                              add dl, 48
[ 752]    0985: CD 21                                 int 21h
[ 753]        :                                       
[ 754]    0987: B4 09                                 mov ah,9
[ 755]    0989: BA 16 03                              lea dx, str20
[ 756]    098C: CD 21                                 int 21h
[ 757]        :                                       
[ 758]    098E: 33 C0                                 xor ax,ax
[ 759]        :                                       
[ 760]        :                                       
[ 761]    0990: A1 B2 03                              mov ax,prevPrice
[ 762]    0993: E8 8D 00                              call decimalOutput
[ 763]        :                                       
[ 764]    0996: B4 09                                 mov ah, 9
[ 765]    0998: BA 30 03                              Lea dx,str21
[ 766]    099B: CD 21                                 int 21h
[ 767]        :                                       
[ 768]        :                                       
[ 769]    099D: 33 C0                                 xor ax,ax
[ 770]        :                                       
[ 771]        :                                       
[ 772]    099F: A1 B0 03                              mov ax, totPrice
[ 773]    09A2: E8 7E 00                              call decimalOutput
[ 774]        :                                       
[ 775]    09A5: B4 09                                 mov ah,9
[ 776]    09A7: BA 5E 01                              lea dx, str9
[ 777]    09AA: CD 21                                 int 21h
[ 778]        :                                       
[ 779]    09AC: BA 46 03                              Lea dx,str22
[ 780]    09AF: CD 21                                 int 21h
[ 781]        :                                       
[ 782]    09B1: B4 09                                 mov ah,9
[ 783]    09B3: BA 60 03                              Lea dx,str23
[ 784]    09B6: CD 21                                 int 21h
[ 785]        :                                       
[ 786]    09B8: B4 01                                 mov ah,1
[ 787]    09BA: CD 21                                 int 21h
[ 788]        :                                       
[ 789]    09BC: 3C 31                                 cmp al,31h
[ 790]    09BE: 75 03 E9 32 FC                        je start
[ 791]        :                                       
[ 792]    09C3: B4 09                                 mov ah,9
[ 793]    09C5: BA 7E 03                              Lea dx,str24
[ 794]    09C8: CD 21                                 int 21h
[ 795]        :                                       
[ 796]    09CA:                                       FExit:
[ 797]    09CA: B4 4C                                 mov ah,4ch
[ 798]    09CC: CD 21                                 int 21h
[ 799]        :                                       
[ 800]        :                                       main endp
[ 801]        :                                       
[ 802]        :                                       
[ 803]    09CE:                                       decimalInput proc
[ 804]        :                                       
[ 805]    09CE: 53                                    push bx
[ 806]    09CF: 51                                    push cx
[ 807]    09D0: 52                                    push dx
[ 808]    09D1:                                       inputStart:
[ 809]        :                                       
[ 810]    09D1: B4 02                                 mov ah, 2
[ 811]    09D3: B2 20                                 mov dl, ' '
[ 812]    09D5: CD 21                                 int 21h
[ 813]        :                                       
[ 814]    09D7: 33 DB                                 xor bx, bx
[ 815]    09D9: 33 C9                                 xor cx, cx
[ 816]        :                                       
[ 817]    09DB: B4 01                                 mov ah, 1
[ 818]    09DD: CD 21                                 int 21h
[ 819]        :                                       
[ 820]    09DF: 3C 2D                                 cmp al, '-'
[ 821]    09E1: 74 06                                 je minus
[ 822]        :                                       
[ 823]    09E3: 3C 2B                                 cmp al, '+'
[ 824]    09E5: 74 05                                 je plus
[ 825]    09E7: EB 05                                 jmp repeat
[ 826]        :                                       
[ 827]    09E9:                                       minus:
[ 828]    09E9: B9 01 00                              mov cx, 1
[ 829]    09EC:                                       plus:
[ 830]    09EC: CD 21                                 int 21h
[ 831]        :                                       
[ 832]    09EE:                                       repeat:
[ 833]        :                                       
[ 834]    09EE: 3C 30                                 cmp al, '0'
[ 835]    09F0: 7C 24                                 jnge nonDigit
[ 836]    09F2: 3C 39                                 cmp al, '9'
[ 837]    09F4: 7F 20                                 jnle nonDigit
[ 838]        :                                       
[ 839]    09F6: 25 0F 00                              and ax, 000fh
[ 840]    09F9: 50                                    push ax
[ 841]        :                                       
[ 842]    09FA: B8 0A 00                              mov ax,10
[ 843]    09FD: F7 E3                                 mul bx
[ 844]    09FF: 5B                                    pop bx
[ 845]    0A00: 03 D8                                 add bx, ax
[ 846]        :                                       
[ 847]    0A02: B4 01                                 mov ah, 1
[ 848]    0A04: CD 21                                 int 21h
[ 849]    0A06: 3C 0D                                 cmp al, 0dh
[ 850]    0A08: 75 E4                                 jne repeat
[ 851]        :                                       
[ 852]    0A0A: 8B C3                                 mov ax, bx
[ 853]    0A0C: 0B C9                                 or cx, cx
[ 854]        :                                       
[ 855]    0A0E: 74 02                                 je exit
[ 856]    0A10: F7 D8                                 neg ax
[ 857]        :                                       
[ 858]    0A12:                                       exit:
[ 859]        :                                       
[ 860]    0A12: 5A                                    pop dx
[ 861]    0A13: 59                                    pop cx
[ 862]    0A14: 5B                                    pop bx
[ 863]    0A15: C3                                    ret
[ 864]        :                                       
[ 865]    0A16:                                       nonDigit:
[ 866]        :                                       
[ 867]    0A16: B4 02                                 mov ah, 2
[ 868]    0A18: B2 0D                                 mov dl, 0dh
[ 869]    0A1A: CD 21                                 int 21h
[ 870]    0A1C: B2 0A                                 mov dl, 0ah
[ 871]    0A1E: CD 21                                 int 21h
[ 872]    0A20: EB AF                                 jmp inputStart
[ 873]    0A22: C3                                    ret
[ 874]        :                                       decimalInput endp
[ 875]        :                                       
[ 876]        :                                       
[ 877]        :                                       
[ 878]    0A23:                                       decimalOutput proc
[ 879]        :                                       
[ 880]    0A23: 50                                    push  ax
[ 881]    0A24: 53                                    push  bx
[ 882]    0A25: 51                                    push  cx
[ 883]    0A26: 52                                    push  dx
[ 884]        :                                       
[ 885]    0A27: 0B C0                                 or ax, ax
[ 886]    0A29: 7D 0A                                 jge IF
[ 887]        :                                       
[ 888]    0A2B: 50                                    push ax
[ 889]    0A2C: B2 20                                 mov dl, ' '
[ 890]    0A2E: B4 02                                 mov ah, 2
[ 891]    0A30: CD 21                                 int 21h
[ 892]    0A32: 58                                    pop ax
[ 893]    0A33: F7 D8                                 neg ax
[ 894]        :                                       
[ 895]    0A35:                                       IF:
[ 896]        :                                       
[ 897]    0A35: 33 C9                                 xor cx, cx
[ 898]    0A37: BB 0A 00                              mov  bx, 10d
[ 899]        :                                       
[ 900]    0A3A:                                       loopRepeat:
[ 901]        :                                       
[ 902]    0A3A: 33 D2                                 xor dx, dx
[ 903]    0A3C: F7 F3                                 div bx
[ 904]    0A3E: 52                                    push dx
[ 905]    0A3F: 41                                    inc cx
[ 906]        :                                       
[ 907]        :                                       
[ 908]    0A40: 0B C0                                 or  ax, ax
[ 909]    0A42: 75 F6                                 jne   loopRepeat
[ 910]        :                                       
[ 911]    0A44: B4 02                                 mov   ah, 2
[ 912]        :                                       
[ 913]    0A46:                                       printLoop:
[ 914]        :                                       
[ 915]    0A46: 5A                                    pop  dx
[ 916]    0A47: 80 CA 30                              or dl, 30h
[ 917]    0A4A: CD 21                                 int 21h
[ 918]    0A4C: E2 F8                                 loop  printLoop
[ 919]        :                                       
[ 920]    0A4E: 5A                                    pop dx
[ 921]    0A4F: 59                                    pop cx
[ 922]    0A50: 5B                                    pop bx
[ 923]    0A51: 58                                    pop ax
[ 924]        :                                       
[ 925]    0A52: C3                                    ret
[ 926]        :                                       decimalOutput endp
[ 927]        :                                       
[ 928]        :                                       end main
[ 929]        :                                       
[ 930]        :                                       
[ 931]        :                                       
 
===================================================================================================
 
EXE HEADER - bytes from 0000 to 01FF inclusive.

0000: 4D      -   exe signature (M)
0001: 5A      -   exe signature (Z)
0002: 53      -   bytes on last page (l.byte)
0003: 00      -   bytes on last page (h.byte)
0004: 07      -   512 byte pages in file (l.byte)
0005: 00      -   512 byte pages in file (h.byte)
0006: 01      -   relocations (l.byte)
0007: 00      -   relocations (h.byte)
0008: 20      -   paragraphs in header (l.byte)
0009: 00      -   paragraphs in header (h.byte)
000A: 00      -   minimum memory (l.byte)
000B: 00      -   minimum memory (h.byte)
000C: FF      -   maximum memory (l.byte)
000D: FF      -   maximum memory (h.byte)
000E: 00      -   SS - stack segment (l.byte)
000F: 00      -   SS - stack segment (h.byte)
0010: 00      -   SP - stack pointer (l.byte)
0011: 01      -   SP - stack pointer (h.byte)
0012: 65      -   check sum (l.byte)
0013: 6B      -   check sum (h.byte)
0014: 00      -   IP - instruction pointer (l.byte)
0015: 00      -   IP - instruction pointer (h.byte)
0016: 5D      -   CS - code segment (l.byte)
0017: 00      -   CS - code segment (h.byte)
0018: 1E      -   relocation table adress (l.byte)
0019: 00      -   relocation table adress (h.byte)
001A: 00      -   overlay number (l.byte)
001B: 00      -   overlay number (h.byte)
001C: 01      -   signature (l.byte)
001D: 00      -   signature (h.byte)
001E: 01      -   relocation table - offset inside segment (l.byte)
001F: 00      -   relocation table - offset inside segment (h.byte)
0020: 5D      -   relocation table - segment anchor (l.byte)
0021: 00      -   relocation table - segment anchor (h.byte)
0022 to 01FF  -   reserved relocation area  (00) 




===================================================================================================
