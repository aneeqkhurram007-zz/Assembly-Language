EMU8086 GENERATED LISTING. MACHINE CODE <- SOURCE.
 
db_100_d.exe_ -- emu8086 assembler version: 4.08  
 
[ 5/27/2021  --  8:10:05 PM ] 
 
===================================================================================================
[LINE]     LOC: MACHINE CODE                          SOURCE
===================================================================================================
 
[   1]        :                                       .model small
[   2]        :                                       .stack 100h
[   3]        :                                       .data
[   4]        :                                       
[   5]        :                                       ;strings
[   6]        :                                       
[   7]    0100: 0A 00 0D 00 09 00 09 00 57 65 6C 63   str0 dw 10,13,9,9,"Welcome To Comsats Restaurant$"
                6F 6D 65 20 54 6F 20 43 6F 6D 73 61 
                74 73 20 52 65 73 74 61 75 72 61 6E 
                74 24                               
[   8]        :                                       
[   9]    0126: 0A 00 0D 00 0A 00 0D 00 09 00 46 6F   str1 dw 10,13,10,13,9,"Food Menu",10,13,"$"
                6F 64 20 4D 65 6E 75 00 0A 00 0D 00 
                24 00                               
[  10]        :                                       
[  11]        :                                       
[  12]    0140: 0A 00 0D 00 2D 2D 2D 2D 2D 2D 2D 2D   str2 dw 10,13,"----------------------------","$"
                2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 
                2D 2D 2D 2D 2D 2D 2D 2D 24 00       
[  13]        :                                       
[  14]        :                                       
[  15]        :                                       
[  16]    0162: 0A 00 0D 00 0A 00 0D 00 09 00 41 70   str3 dw 10,13,10,13,9,"Appetizers$"
                70 65 74 69 7A 65 72 73 24 00       
[  17]    0178: 0A 00 0D 00 0A 00 0D 00 31 2E 4C 41   str4 dw 10,13,10,13, "1.LASAGNE 60/-",10,13,"2.MARGARITA 50/-",10,13,"3.SPAGHETTI 40/- $"
                53 41 47 4E 45 20 36 30 2F 2D 0A 00 
                0D 00 32 2E 4D 41 52 47 41 52 49 54 
                41 20 35 30 2F 2D 0A 00 0D 00 33 2E 
                53 50 41 47 48 45 54 54 49 20 34 30 
                2F 2D 20 24                         
[  18]        :                                       
[  19]    01B8: 0A 00 0D 00 0A 00 0D 00 09 00 4D 61   str5 dw 10,13,10,13,9,"Main Course$"
                69 6E 20 43 6F 75 72 73 65 24       
[  20]    01CE: 0A 00 0D 00 0A 00 0D 00 34 2E 53 48   str6 dw 10,13,10,13, "4.SHAHI BIRYANI 100/-",10,13,"5.BEEF QOURMA 150/-",10,13,"6.CHICKEN TIKKA 120/- $"
                41 48 49 20 42 49 52 59 41 4E 49 20 
                31 30 30 2F 2D 00 0A 00 0D 00 35 2E 
                42 45 45 46 20 51 4F 55 52 4D 41 20 
                31 35 30 2F 2D 00 0A 00 0D 00 36 2E 
                43 48 49 43 4B 45 4E 20 54 49 4B 4B 
                41 20 31 32 30 2F 2D 20 24 00       
[  21]        :                                       
[  22]    0220: 0A 00 0D 00 0A 00 0D 00 09 00 46 61   str7 dw 10,13,10,13,9,"Fast Food$"
                73 74 20 46 6F 6F 64 24             
[  23]    0234: 0A 00 0D 00 0A 00 0D 00 37 2E 50 49   str8 dw 10,13,10,13, "7.PIZZA 200/-",10,13,"8.BURGER 150/-$"
                5A 5A 41 20 32 30 30 2F 2D 00 0A 00 
                0D 00 38 2E 42 55 52 47 45 52 20 31 
                35 30 2F 2D 24 00                   
[  24]        :                                       
[  25]    025E: 0A 00 0D 00 0A 00 0D 00 2D 2D 2D 2D   str9 dw 10,13,10,13,"----------------------------","$"
                2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 
                2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 
                24 00                               
[  26]        :                                       
[  27]    0284: 0A 00 0D 00 50 72 65 73 73 20 31 2E   str10 dw 10,13,"Press 1. Add Menu",10,13,"Press 2. Order",10,13,"Press 3. Exit $"
                20 41 64 64 20 4D 65 6E 75 00 0A 00 
                0D 00 50 72 65 73 73 20 32 2E 20 4F 
                72 64 65 72 0A 00 0D 00 50 72 65 73 
                73 20 33 2E 20 45 78 69 74 20 24 00 
                                                    
[  28]        :                                       
[  29]    02C0: 0A 00 0D 00 0A 00 0D 00 59 6F 75 72   str11 dw 10,13,10,13,"Your Choice: $"
                20 43 68 6F 69 63 65 3A 20 24       
[  30]        :                                       
[  31]    02D6: 0A 00 0D 00 0A 00 0D 00 54 68 65 72   str12 dw 10,13,10,13, "There is no more than 8 items, but you can add one.$"
                65 20 69 73 20 6E 6F 20 6D 6F 72 65 
                20 74 68 61 6E 20 38 20 69 74 65 6D 
                73 2C 20 62 75 74 20 79 6F 75 20 63 
                61 6E 20 61 64 64 20 6F 6E 65 2E 24 
                                                    
[  32]        :                                       
[  33]    0312: 0A 00 0D 00 0A 00 0D 00 54 6F 20 61   str13 dw 10,13,10,13, "To add press 1 or press 2 to get back to menu: $"
                64 64 20 70 72 65 73 73 20 31 20 6F 
                72 20 70 72 65 73 73 20 32 20 74 6F 
                20 67 65 74 20 62 61 63 6B 20 74 6F 
                20 6D 65 6E 75 3A 20 24             
[  34]        :                                       
[  35]    034A: 0A 00 0D 00 0A 00 0D 00 45 6E 74 65   str14 dw 10,13,10,13, "Enter Food name: $"
                72 20 46 6F 6F 64 20 6E 61 6D 65 3A 
                20 24                               
[  36]    0364: 0A 00 0D 00 0A 00 0D 00 09 00 50 72   str15 dw 10,13,10,13,9,"Price: $"
                69 63 65 3A 20 24                   
[  37]        :                                       
[  38]    0376: 2F 2D 24 00                           str16 dw "/-$"
[  39]        :                                       
[  40]        :                                       
[  41]    037A: 0A 00 0D 00 0A 00 0D 00 53 65 6C 65   str17 dw 10,13,10,13, "Select the menu number: $"
                63 74 20 74 68 65 20 6D 65 6E 75 20 
                6E 75 6D 62 65 72 3A 20 24 00       
[  42]        :                                       
[  43]    039C: 0A 00 0D 00 0A 00 0D 00 45 6E 74 65   str18 dw 10,13,10,13, "Enter quantity: $"
                72 20 71 75 61 6E 74 69 74 79 3A 20 
                24 00                               
[  44]        :                                       
[  45]    03B6: 0A 00 0D 00 44 6F 20 79 6F 75 20 77   str19 dw 10,13,"Do you want to change your Order ?",10,13,"Press 1. Change Order",10,13,"Press any key to continue. $"
                61 6E 74 20 74 6F 20 63 68 61 6E 67 
                65 20 79 6F 75 72 20 4F 72 64 65 72 
                20 3F 0A 00 0D 00 50 72 65 73 73 20 
                31 2E 20 43 68 61 6E 67 65 20 4F 72 
                64 65 72 00 0A 00 0D 00 50 72 65 73 
                73 20 61 6E 79 20 6B 65 79 20 74 6F 
                20 63 6F 6E 74 69 6E 75 65 2E 20 24 
                                                    
[  46]        :                                       
[  47]        :                                       
[  48]    0416: 0A 00 0D 00 0A 00 0D 00 50 72 65 76   str20 dw 10,13,10,13,"Previous Total: $"
                69 6F 75 73 20 54 6F 74 61 6C 3A 20 
                24 00                               
[  49]        :                                       
[  50]        :                                       
[  51]    0430: 0A 00 0D 00 0A 00 0D 00 54 6F 74 61   str21 dw 10,13,10,13, "Total price: $"
                6C 20 70 72 69 63 65 3A 20 24       
[  52]        :                                       
[  53]    0446: 0A 00 0D 00 0A 00 0D 00 52 65 4F 72   str22 dw 10,13,10,13, "ReOrder : Press 1.$"
                64 65 72 3A 20 50 72 65 73 73 20 31 
                2E 24                               
[  54]    0460: 0A 00 0D 00 0A 00 0D 00 45 78 69 74   str23 dw 10,13,10,13, "Exit : Press Any key $"
                3A 20 50 72 65 73 73 20 41 6E 79 20 
                6B 65 79 20 24 00                   
[  55]        :                                       
[  56]        :                                       
[  57]    047E: 0A 00 0D 00 0A 00 0D 00 09 00 2A 2A   str24 dw 10,13,10,13,9, "*****THANK YOU*****$"
                2A 2A 2A 54 48 41 4E 4B 20 59 4F 55 
                2A 2A 2A 2A 2A 24                   
[  58]        :                                       
[  59]        :                                       
[  60]        :                                       
[  61]        :                                       
[  62]        :                                       ;variables
[  63]        :                                       
[  64]    049C: 00                                    choice db 0
[  65]        :                                       
[  66]    049D: 08                                    v db 8
[  67]        :                                       
[  68]    049E: 3C 00                                 lasprice dw 60
[  69]    04A0: 32 00                                 margprice dw 50
[  70]    04A2: 28 00                                 spagprice dw 40
[  71]        :                                       
[  72]    04A4: 64 00                                 birprice dw 100
[  73]    04A6: 96 00                                 beefprice dw 150
[  74]    04A8: 78 00                                 tikkaprice dw 120
[  75]        :                                       
[  76]    04AA: C8 00                                 pizzaprice dw 200
[  77]    04AC: 96 00                                 burgerprice dw 150
[  78]        :                                       
[  79]    04AE: 00 00                                 nprice dw 0
[  80]        :                                       
[  81]    04B0: 00 00                                 totPrice dw 0
[  82]    04B2: 00 00                                 prevPrice dw 0
[  83]        :                                       
[  84]    04B4: 24 24 24 24 24 24 24 24 24 24 24 24   var1 db 100 dup('$')
                24 24 24 24 24 24 24 24 24 24 24 24 
                24 24 24 24 24 24 24 24 24 24 24 24 
                24 24 24 24 24 24 24 24 24 24 24 24 
                24 24 24 24 24 24 24 24 24 24 24 24 
                24 24 24 24 24 24 24 24 24 24 24 24 
                24 24 24 24 24 24 24 24 24 24 24 24 
                24 24 24 24 24 24 24 24 24 24 24 24 
                24 24 24 24                         
[  85]        :                                       
[  86]        :                                       
[  87]        :                                       ;customer strings and data
[  88]        :                                       
[  89]        :                                       name db 100 dup('$')
[  90]        :                                       
[  91]    0518: 01                                    customerID db 1
[  92]        :                                       
[  93]    0519: 00                                    foodOrderID db 0
[  94]        :                                       
[  95]    051A: 0A 0D 45 6E 74 65 72 20 79 6F 75 72   c1 db 10,13,"Enter your name: $"
                20 6E 61 6D 65 3A 20 24             
[  96]        :                                       
[  97]    052E: 0A 0D 4E 61 6D 65 3A 20 24            c2 db 10,13,"Name: $"
[  98]        :                                       
[  99]    0537: 0A 0D 43 75 73 74 6F 6D 65 72 20 49   c3 db 10,13,"Customer ID: $"
                44 3A 20 24                         
[ 100]        :                                       
[ 101]    0547: 0A 0D 46 6F 6F 64 20 4F 72 64 65 72   c4 db 10,13,"Food Order ID: $"
                20 49 44 3A 20 24                   
[ 102]        :                                       
[ 103]        :                                       
[ 104]        :                                       
[ 105]        :                                       
[ 106]        :                                       .code
[ 107]        :                                       
[ 108]    0560:                                       main proc
[ 109]        :                                       
[ 110]    0560: B8 10 00                              mov ax,@data
[ 111]    0563: 8E D8                                 mov ds,ax
[ 112]        :                                       
[ 113]    0565: B4 09                                 mov ah,9
[ 114]    0567: BA 00 00                              Lea dx,str0
[ 115]    056A: CD 21                                 int 21h
[ 116]        :                                       
[ 117]        :                                       
[ 118]    056C: B4 01                                 mov ah, 1
[ 119]        :                                       
[ 120]    056E: BE B4 03                              lea si, var1
[ 121]        :                                       
[ 122]    0571: CD 21                                 int 21h
[ 123]        :                                       
[ 124]    0573:                                       inputName:
[ 125]        :                                       
[ 126]    0573: 3C 0D                                 cmp al, 13
[ 127]    0575: 74 07                                 je start
[ 128]        :                                       
[ 129]    0577: 88 04                                 mov [si], al
[ 130]        :                                       
[ 131]    0579: 46                                    inc si
[ 132]        :                                       
[ 133]    057A: CD 21                                 int 21h
[ 134]        :                                       
[ 135]    057C: EB F5                                 jmp inputName
[ 136]        :                                       
[ 137]        :                                       
[ 138]        :                                       
[ 139]    057E:                                       start:
[ 140]        :                                       
[ 141]    057E: B4 09                                 mov ah,9
[ 142]    0580: BA 26 00                              Lea dx,str1
[ 143]    0583: CD 21                                 int 21h
[ 144]        :                                       
[ 145]    0585: FE 06 19 04                           inc foodOrderID
[ 146]        :                                       
[ 147]    0589: 80 3E 9D 03 08                        cmp v,8
[ 148]    058E: 7E 03 E9 CE 00                        jg start1
[ 149]        :                                       
[ 150]        :                                       
[ 151]        :                                       
[ 152]    0593:                                       menu:
[ 153]        :                                       
[ 154]    0593: B4 09                                 mov ah, 9
[ 155]    0595: BA 40 00                              lea dx,str2
[ 156]    0598: CD 21                                 int 21h
[ 157]        :                                       
[ 158]    059A: B4 09                                 mov ah,9
[ 159]    059C: BA 62 00                              lea dx, str3
[ 160]    059F: CD 21                                 int 21h
[ 161]        :                                       
[ 162]    05A1: BA 78 00                              Lea dx,str4
[ 163]    05A4: CD 21                                 int 21h
[ 164]        :                                       
[ 165]    05A6: BA B8 00                              lea dx,str5
[ 166]    05A9: CD 21                                 int 21h
[ 167]        :                                       
[ 168]    05AB: BA CE 00                              lea dx, str6
[ 169]    05AE: CD 21                                 int 21h
[ 170]        :                                       
[ 171]    05B0: BA 20 01                              lea dx, str7
[ 172]    05B3: CD 21                                 int 21h
[ 173]        :                                       
[ 174]    05B5: BA 34 01                              lea dx, str8
[ 175]    05B8: CD 21                                 int 21h
[ 176]        :                                       
[ 177]    05BA: B4 09                                 mov ah, 9
[ 178]    05BC: BA 5E 01                              lea dx,str9
[ 179]    05BF: CD 21                                 int 21h
[ 180]        :                                       
[ 181]    05C1: B4 09                                 mov ah, 9
[ 182]    05C3: BA 84 01                              lea dx, str10
[ 183]    05C6: CD 21                                 int 21h
[ 184]        :                                       
[ 185]    05C8: B4 09                                 mov ah, 9
[ 186]    05CA: BA C0 01                              lea dx, str11
[ 187]    05CD: CD 21                                 int 21h
[ 188]        :                                       
[ 189]    05CF: B4 01                                 mov ah, 1
[ 190]    05D1: CD 21                                 int 21h
[ 191]        :                                       
[ 192]    05D3:                                       intiMenu:
[ 193]        :                                       
[ 194]    05D3: A2 9C 03                              mov choice, al
[ 195]        :                                       
[ 196]    05D6: 80 3E 9C 03 32                        cmp choice, 50
[ 197]    05DB: 75 43                                 jne menuadd
[ 198]        :                                       
[ 199]    05DD: B4 09                                 mov ah,9
[ 200]    05DF: BA 7A 02                              Lea dx,str17
[ 201]    05E2: CD 21                                 int 21h
[ 202]        :                                       
[ 203]    05E4: B4 01                                 mov ah,1
[ 204]    05E6: CD 21                                 int 21h
[ 205]        :                                       
[ 206]    05E8: 3C 31                                 cmp al,31h
[ 207]    05EA: 75 03 E9 87 01                        je lasagn
[ 208]    05EF: 3C 32                                 cmp al,32h
[ 209]    05F1: 75 03 E9 58 01                        je marga
[ 210]    05F6: 3C 33                                 cmp al,33h
[ 211]    05F8: 75 03 E9 A1 01                        je sapaghetti
[ 212]    05FD: 3C 34                                 cmp al, 34h
[ 213]    05FF: 75 03 E9 C2 01                        je biryani
[ 214]        :                                       
[ 215]    0604: 3C 35                                 cmp al, 35h
[ 216]    0606: 75 03 E9 E3 01                        je beef
[ 217]        :                                       
[ 218]        :                                       
[ 219]    060B: 3C 36                                 cmp al, 36h
[ 220]    060D: 75 03 E9 04 02                        je tikka
[ 221]        :                                       
[ 222]    0612: 3C 37                                 cmp al, 37h
[ 223]    0614: 75 03 E9 24 02                        je pizza
[ 224]        :                                       
[ 225]    0619: 3C 38                                 cmp al, 38h
[ 226]    061B: 75 03 E9 44 02                        je burger
[ 227]        :                                       
[ 228]        :                                       
[ 229]    0620:                                       menuadd:
[ 230]        :                                       
[ 231]    0620: 80 3E 9C 03 31                        cmp choice, 49
[ 232]    0625: 74 03 E9 D7 02                        jne FExit
[ 233]        :                                       
[ 234]    062A: FE 06 9D 03                           inc v
[ 235]        :                                       
[ 236]    062E: B4 09                                 mov ah,9
[ 237]    0630: BA D6 01                              Lea dx,str12
[ 238]    0633: CD 21                                 int 21h
[ 239]        :                                       
[ 240]    0635: B4 09                                 mov ah,9
[ 241]    0637: BA 12 02                              Lea dx,str13
[ 242]    063A: CD 21                                 int 21h
[ 243]        :                                       
[ 244]    063C: B4 01                                 mov ah,1
[ 245]    063E: CD 21                                 int 21h
[ 246]    0640: 3C 32                                 cmp al,32h
[ 247]    0642: 75 03 E9 4C FF                        je menu
[ 248]        :                                       
[ 249]    0647: B4 09                                 mov ah,9
[ 250]    0649: BA 4A 02                              Lea dx,str14
[ 251]    064C: CD 21                                 int 21h
[ 252]        :                                       
[ 253]    064E: BE B4 03                              mov si,offset var1
[ 254]        :                                       
[ 255]    0651:                                       l1:
[ 256]    0651: B4 01                                 mov ah,1
[ 257]    0653: CD 21                                 int 21h
[ 258]    0655: 3C 0D                                 cmp al,13
[ 259]    0657: 74 05                                 je print
[ 260]    0659: 88 04                                 mov [si],al
[ 261]    065B: 46                                    inc si
[ 262]    065C: EB F3                                 jmp l1
[ 263]        :                                       
[ 264]    065E:                                       print:
[ 265]        :                                       
[ 266]    065E: E8 2A 02                              call price
[ 267]        :                                       
[ 268]    0661:                                       start1:
[ 269]        :                                       
[ 270]    0661: B4 09                                 mov ah, 9
[ 271]    0663: BA 40 00                              lea dx,str2
[ 272]    0666: CD 21                                 int 21h
[ 273]        :                                       
[ 274]        :                                       
[ 275]    0668: B4 09                                 mov ah,9
[ 276]    066A: BA 62 00                              lea dx, str3
[ 277]    066D: CD 21                                 int 21h
[ 278]        :                                       
[ 279]    066F: BA 78 00                              Lea dx,str4
[ 280]    0672: CD 21                                 int 21h
[ 281]        :                                       
[ 282]    0674: BA B8 00                              lea dx,str5
[ 283]    0677: CD 21                                 int 21h
[ 284]        :                                       
[ 285]    0679: BA CE 00                              lea dx, str6
[ 286]    067C: CD 21                                 int 21h
[ 287]        :                                       
[ 288]    067E: BA 20 01                              lea dx, str7
[ 289]    0681: CD 21                                 int 21h
[ 290]        :                                       
[ 291]    0683: BA 34 01                              lea dx, str8
[ 292]    0686: CD 21                                 int 21h
[ 293]        :                                       
[ 294]        :                                       
[ 295]        :                                       
[ 296]    0688: B4 02                                 mov ah,2
[ 297]        :                                       
[ 298]    068A: B2 0A                                 mov dl, 10
[ 299]    068C: CD 21                                 int 21h
[ 300]        :                                       
[ 301]    068E: B2 0D                                 mov dl, 13
[ 302]    0690: CD 21                                 int 21h
[ 303]        :                                       
[ 304]    0692: B4 02                                 mov ah,2
[ 305]    0694: B2 20                                 mov dl,' '
[ 306]    0696: CD 21                                 int 21h
[ 307]        :                                       
[ 308]        :                                       
[ 309]    0698: 8A 16 9D 03                           mov dl,v
[ 310]    069C: 80 C2 30                              add dl, 48
[ 311]    069F: CD 21                                 int 21h
[ 312]        :                                       
[ 313]    06A1: B4 02                                 mov ah,2
[ 314]    06A3: B2 2E                                 mov dl,'.'
[ 315]    06A5: CD 21                                 int 21h
[ 316]        :                                       
[ 317]        :                                       
[ 318]    06A7: BA B4 03                              mov dx,offset var1
[ 319]    06AA: B4 09                                 mov ah,9
[ 320]    06AC: CD 21                                 int 21h
[ 321]        :                                       
[ 322]    06AE: B4 02                                 mov ah,2
[ 323]    06B0: B2 20                                 mov dl,' '
[ 324]    06B2: CD 21                                 int 21h
[ 325]        :                                       
[ 326]    06B4: 33 C0                                 xor ax,ax
[ 327]    06B6: A1 AE 03                              mov ax,nprice
[ 328]    06B9: E8 9E 02                              call decimalOutput
[ 329]        :                                       
[ 330]        :                                       
[ 331]        :                                       
[ 332]    06BC: B4 09                                 mov ah,9
[ 333]    06BE: BA 76 02                              Lea dx,str16
[ 334]    06C1: CD 21                                 int 21h
[ 335]        :                                       
[ 336]        :                                       
[ 337]    06C3: B4 09                                 mov ah, 9
[ 338]    06C5: BA 5E 01                              lea dx,str9
[ 339]    06C8: CD 21                                 int 21h
[ 340]        :                                       
[ 341]    06CA: B4 09                                 mov ah, 9
[ 342]    06CC: BA 84 01                              lea dx, str10
[ 343]    06CF: CD 21                                 int 21h
[ 344]        :                                       
[ 345]    06D1: B4 09                                 mov ah, 9
[ 346]    06D3: BA C0 01                              lea dx, str11
[ 347]    06D6: CD 21                                 int 21h
[ 348]        :                                       
[ 349]    06D8: B4 01                                 mov ah, 1
[ 350]    06DA: CD 21                                 int 21h
[ 351]        :                                       
[ 352]    06DC: A2 9C 03                              mov choice, al
[ 353]        :                                       
[ 354]    06DF: 80 3E 9C 03 32                        cmp choice, 50
[ 355]    06E4: 74 03 E9 37 FF                        jne menuadd
[ 356]        :                                       
[ 357]    06E9: B4 09                                 mov ah,9
[ 358]    06EB: BA 7A 02                              Lea dx,str17
[ 359]    06EE: CD 21                                 int 21h
[ 360]        :                                       
[ 361]    06F0: B4 01                                 mov ah,1
[ 362]    06F2: CD 21                                 int 21h
[ 363]        :                                       
[ 364]    06F4: 3C 31                                 cmp al,31h
[ 365]    06F6: 74 7E                                 je lasagn
[ 366]    06F8: 3C 32                                 cmp al,32h
[ 367]    06FA: 74 52                                 je marga
[ 368]    06FC: 3C 33                                 cmp al,33h
[ 369]    06FE: 75 03 E9 9B 00                        je sapaghetti
[ 370]    0703: 3C 34                                 cmp al, 34h
[ 371]    0705: 75 03 E9 BC 00                        je biryani
[ 372]        :                                       
[ 373]    070A: 3C 35                                 cmp al, 35h
[ 374]    070C: 75 03 E9 DD 00                        je beef
[ 375]        :                                       
[ 376]        :                                       
[ 377]    0711: 3C 36                                 cmp al, 36h
[ 378]    0713: 75 03 E9 FE 00                        je tikka
[ 379]        :                                       
[ 380]    0718: 3C 37                                 cmp al, 37h
[ 381]    071A: 75 03 E9 1E 01                        je pizza
[ 382]        :                                       
[ 383]    071F: 3C 38                                 cmp al, 38h
[ 384]    0721: 75 03 E9 3E 01                        je burger
[ 385]        :                                       
[ 386]        :                                       
[ 387]    0726:                                       newmenu_:
[ 388]        :                                       
[ 389]    0726: B4 09                                 mov ah,9
[ 390]    0728: BA 9C 02                              Lea dx,str18
[ 391]    072B: CD 21                                 int 21h
[ 392]        :                                       
[ 393]    072D: 33 C0                                 xor ax,ax
[ 394]        :                                       
[ 395]    072F: E8 D3 01                              call decimalInput
[ 396]        :                                       
[ 397]        :                                       
[ 398]    0732: 8B D8                                 mov bx, ax
[ 399]        :                                       
[ 400]    0734: B4 09                                 mov ah, 9
[ 401]    0736: BA B6 02                              lea dx, str19
[ 402]    0739: CD 21                                 int 21h
[ 403]        :                                       
[ 404]    073B: B4 01                                 mov ah, 1
[ 405]    073D: CD 21                                 int 21h
[ 406]        :                                       
[ 407]    073F: 3C 31                                 cmp al, '1'
[ 408]    0741: 74 E3                                 je newmenu_
[ 409]        :                                       
[ 410]    0743: 8B C3                                 mov ax, bx
[ 411]        :                                       
[ 412]        :                                       
[ 413]    0745: F7 26 AE 03                           mul nprice
[ 414]        :                                       
[ 415]    0749: 8B D8                                 mov bx,ax
[ 416]        :                                       
[ 417]    074B: E9 6B 01                              jmp totalprice
[ 418]        :                                       
[ 419]        :                                       
[ 420]    074E:                                       marga:
[ 421]        :                                       
[ 422]    074E: B4 09                                 mov ah,9
[ 423]    0750: BA 9C 02                              Lea dx,str18
[ 424]    0753: CD 21                                 int 21h
[ 425]        :                                       
[ 426]    0755: 33 C0                                 xor ax,ax
[ 427]        :                                       
[ 428]    0757: E8 AB 01                              call decimalInput
[ 429]        :                                       
[ 430]    075A: 8B D8                                 mov bx, ax
[ 431]        :                                       
[ 432]    075C: B4 09                                 mov ah, 9
[ 433]    075E: BA B6 02                              lea dx, str19
[ 434]    0761: CD 21                                 int 21h
[ 435]        :                                       
[ 436]    0763: B4 01                                 mov ah, 1
[ 437]    0765: CD 21                                 int 21h
[ 438]        :                                       
[ 439]    0767: 3C 31                                 cmp al, '1'
[ 440]    0769: 74 E3                                 je marga
[ 441]        :                                       
[ 442]    076B: 8B C3                                 mov ax, bx
[ 443]        :                                       
[ 444]    076D: F7 26 A0 03                           mul margprice
[ 445]        :                                       
[ 446]    0771: 8B D8                                 mov bx,ax
[ 447]        :                                       
[ 448]    0773: E9 43 01                              jmp totalprice
[ 449]        :                                       
[ 450]    0776:                                       lasagn:
[ 451]        :                                       
[ 452]    0776: B4 09                                 mov ah,9
[ 453]    0778: BA 9C 02                              Lea dx,str18
[ 454]    077B: CD 21                                 int 21h
[ 455]        :                                       
[ 456]    077D: 33 C0                                 xor ax,ax
[ 457]        :                                       
[ 458]    077F: E8 83 01                              call decimalInput
[ 459]        :                                       
[ 460]    0782: 8B D8                                 mov bx, ax
[ 461]        :                                       
[ 462]    0784: B4 09                                 mov ah, 9
[ 463]    0786: BA B6 02                              lea dx, str19
[ 464]    0789: CD 21                                 int 21h
[ 465]        :                                       
[ 466]    078B: B4 01                                 mov ah, 1
[ 467]    078D: CD 21                                 int 21h
[ 468]        :                                       
[ 469]    078F: 3C 31                                 cmp al, '1'
[ 470]    0791: 74 E3                                 je lasagn
[ 471]        :                                       
[ 472]    0793: 8B C3                                 mov ax, bx
[ 473]        :                                       
[ 474]        :                                       
[ 475]        :                                       
[ 476]    0795: F7 26 9E 03                           mul lasprice
[ 477]        :                                       
[ 478]    0799: 8B D8                                 mov bx,ax
[ 479]        :                                       
[ 480]    079B: E9 1B 01                              jmp totalprice
[ 481]        :                                       
[ 482]    079E:                                       sapaghetti:
[ 483]    079E: B4 09                                 mov ah,9
[ 484]    07A0: BA 9C 02                              Lea dx,str18
[ 485]    07A3: CD 21                                 int 21h
[ 486]        :                                       
[ 487]    07A5: 33 C0                                 xor ax,ax
[ 488]        :                                       
[ 489]    07A7: E8 5B 01                              call decimalInput
[ 490]        :                                       
[ 491]    07AA: 8B D8                                 mov bx, ax
[ 492]        :                                       
[ 493]    07AC: B4 09                                 mov ah, 9
[ 494]    07AE: BA B6 02                              lea dx, str19
[ 495]    07B1: CD 21                                 int 21h
[ 496]        :                                       
[ 497]    07B3: B4 01                                 mov ah, 1
[ 498]    07B5: CD 21                                 int 21h
[ 499]        :                                       
[ 500]    07B7: 3C 31                                 cmp al, '1'
[ 501]    07B9: 74 E3                                 je sapaghetti
[ 502]        :                                       
[ 503]    07BB: 8B C3                                 mov ax, bx
[ 504]        :                                       
[ 505]        :                                       
[ 506]    07BD: F7 26 A2 03                           mul spagprice
[ 507]        :                                       
[ 508]    07C1: 8B D8                                 mov bx,ax
[ 509]        :                                       
[ 510]    07C3: E9 F3 00                              jmp totalprice
[ 511]        :                                       
[ 512]        :                                       
[ 513]        :                                       
[ 514]    07C6:                                       biryani:
[ 515]    07C6: B4 09                                 mov ah,9
[ 516]    07C8: BA 9C 02                              Lea dx,str18
[ 517]    07CB: CD 21                                 int 21h
[ 518]        :                                       
[ 519]    07CD: 33 C0                                 xor ax,ax
[ 520]        :                                       
[ 521]    07CF: E8 33 01                              call decimalInput
[ 522]        :                                       
[ 523]    07D2: 8B D8                                 mov bx, ax
[ 524]        :                                       
[ 525]    07D4: B4 09                                 mov ah, 9
[ 526]    07D6: BA B6 02                              lea dx, str19
[ 527]    07D9: CD 21                                 int 21h
[ 528]        :                                       
[ 529]    07DB: B4 01                                 mov ah, 1
[ 530]    07DD: CD 21                                 int 21h
[ 531]        :                                       
[ 532]    07DF: 3C 31                                 cmp al, '1'
[ 533]    07E1: 74 E3                                 je biryani
[ 534]        :                                       
[ 535]    07E3: 8B C3                                 mov ax, bx
[ 536]        :                                       
[ 537]        :                                       
[ 538]    07E5: F7 26 A4 03                           mul birprice
[ 539]        :                                       
[ 540]    07E9: 8B D8                                 mov bx,ax
[ 541]        :                                       
[ 542]    07EB: E9 CB 00                              jmp totalprice
[ 543]        :                                       
[ 544]        :                                       
[ 545]        :                                       
[ 546]    07EE:                                       beef:
[ 547]    07EE: B4 09                                 mov ah,9
[ 548]    07F0: BA 9C 02                              Lea dx,str18
[ 549]    07F3: CD 21                                 int 21h
[ 550]        :                                       
[ 551]    07F5: 33 C0                                 xor ax,ax
[ 552]        :                                       
[ 553]    07F7: E8 0B 01                              call decimalInput
[ 554]        :                                       
[ 555]    07FA: 8B D8                                 mov bx, ax
[ 556]        :                                       
[ 557]    07FC: B4 09                                 mov ah, 9
[ 558]    07FE: BA B6 02                              lea dx, str19
[ 559]    0801: CD 21                                 int 21h
[ 560]        :                                       
[ 561]    0803: B4 01                                 mov ah, 1
[ 562]    0805: CD 21                                 int 21h
[ 563]        :                                       
[ 564]    0807: 3C 31                                 cmp al, '1'
[ 565]    0809: 74 E3                                 je beef
[ 566]        :                                       
[ 567]    080B: 8B C3                                 mov ax, bx
[ 568]        :                                       
[ 569]        :                                       
[ 570]    080D: F7 26 A6 03                           mul beefprice
[ 571]        :                                       
[ 572]    0811: 8B D8                                 mov bx,ax
[ 573]        :                                       
[ 574]    0813: E9 A3 00                              jmp totalprice
[ 575]        :                                       
[ 576]    0816:                                       tikka:
[ 577]    0816: B4 09                                 mov ah,9
[ 578]    0818: BA 9C 02                              Lea dx,str18
[ 579]    081B: CD 21                                 int 21h
[ 580]        :                                       
[ 581]    081D: 33 C0                                 xor ax,ax
[ 582]        :                                       
[ 583]    081F: E8 E3 00                              call decimalInput
[ 584]        :                                       
[ 585]    0822: 8B D8                                 mov bx, ax
[ 586]        :                                       
[ 587]    0824: B4 09                                 mov ah, 9
[ 588]    0826: BA B6 02                              lea dx, str19
[ 589]    0829: CD 21                                 int 21h
[ 590]        :                                       
[ 591]    082B: B4 01                                 mov ah, 1
[ 592]    082D: CD 21                                 int 21h
[ 593]        :                                       
[ 594]    082F: 3C 31                                 cmp al, '1'
[ 595]    0831: 74 E3                                 je tikka
[ 596]        :                                       
[ 597]    0833: 8B C3                                 mov ax, bx
[ 598]        :                                       
[ 599]        :                                       
[ 600]    0835: F7 26 A8 03                           mul tikkaprice
[ 601]        :                                       
[ 602]    0839: 8B D8                                 mov bx,ax
[ 603]        :                                       
[ 604]    083B: EB 7C                                 jmp totalprice
[ 605]        :                                       
[ 606]    083D:                                       pizza:
[ 607]    083D: B4 09                                 mov ah,9
[ 608]    083F: BA 9C 02                              Lea dx,str18
[ 609]    0842: CD 21                                 int 21h
[ 610]        :                                       
[ 611]    0844: 33 C0                                 xor ax,ax
[ 612]        :                                       
[ 613]    0846: E8 BC 00                              call decimalInput
[ 614]        :                                       
[ 615]    0849: 8B D8                                 mov bx, ax
[ 616]        :                                       
[ 617]    084B: B4 09                                 mov ah, 9
[ 618]    084D: BA B6 02                              lea dx, str19
[ 619]    0850: CD 21                                 int 21h
[ 620]        :                                       
[ 621]    0852: B4 01                                 mov ah, 1
[ 622]    0854: CD 21                                 int 21h
[ 623]        :                                       
[ 624]    0856: 3C 31                                 cmp al, '1'
[ 625]    0858: 74 E3                                 je pizza
[ 626]        :                                       
[ 627]    085A: 8B C3                                 mov ax, bx
[ 628]        :                                       
[ 629]        :                                       
[ 630]    085C: F7 26 AA 03                           mul pizzaprice
[ 631]        :                                       
[ 632]    0860: 8B D8                                 mov bx,ax
[ 633]        :                                       
[ 634]    0862: EB 55                                 jmp totalprice
[ 635]        :                                       
[ 636]    0864:                                       burger:
[ 637]    0864: B4 09                                 mov ah,9
[ 638]    0866: BA 9C 02                              Lea dx,str18
[ 639]    0869: CD 21                                 int 21h
[ 640]        :                                       
[ 641]    086B: 33 C0                                 xor ax,ax
[ 642]        :                                       
[ 643]    086D: E8 95 00                              call decimalInput
[ 644]        :                                       
[ 645]    0870: 8B D8                                 mov bx, ax
[ 646]        :                                       
[ 647]    0872: B4 09                                 mov ah, 9
[ 648]    0874: BA B6 02                              lea dx, str19
[ 649]    0877: CD 21                                 int 21h
[ 650]        :                                       
[ 651]    0879: B4 01                                 mov ah, 1
[ 652]    087B: CD 21                                 int 21h
[ 653]        :                                       
[ 654]    087D: 3C 31                                 cmp al, '1'
[ 655]    087F: 74 E3                                 je burger
[ 656]        :                                       
[ 657]    0881: 8B C3                                 mov ax, bx
[ 658]        :                                       
[ 659]        :                                       
[ 660]    0883: F7 26 AC 03                           mul burgerprice
[ 661]        :                                       
[ 662]    0887: 8B D8                                 mov bx,ax
[ 663]        :                                       
[ 664]    0889: EB 2E                                 jmp totalprice
[ 665]        :                                       
[ 666]        :                                       
[ 667]    088B:                                       price:
[ 668]        :                                       
[ 669]    088B: B4 09                                 mov ah,9
[ 670]    088D: BA 64 02                              Lea dx,str15
[ 671]    0890: CD 21                                 int 21h
[ 672]        :                                       
[ 673]    0892: B8 00 00                              mov ax,0
[ 674]    0895: BB 00 00                              mov bx,0
[ 675]    0898: B9 00 00                              mov cx,0
[ 676]    089B: BA 00 00                              mov dx,0
[ 677]        :                                       
[ 678]    089E:                                       input:
[ 679]    089E: 25 0F 00                              and ax,000Fh
[ 680]    08A1: 50                                    push ax
[ 681]    08A2: B8 0A 00                              mov ax,10
[ 682]    08A5: F7 E3                                 mul bx
[ 683]    08A7: 8B D8                                 mov bx,ax
[ 684]    08A9: 58                                    pop ax
[ 685]    08AA: 03 D8                                 add bx,ax
[ 686]        :                                       
[ 687]    08AC: B4 01                                 mov ah,1
[ 688]    08AE: CD 21                                 int 21h
[ 689]        :                                       
[ 690]    08B0: 3C 0D                                 cmp al,0Dh
[ 691]    08B2: 75 EA                                 jne input
[ 692]        :                                       
[ 693]    08B4: 01 1E AE 03                           add nprice,bx
[ 694]    08B8: C3                                    ret
[ 695]        :                                       
[ 696]        :                                       
[ 697]        :                                       
[ 698]    08B9:                                       totalprice:
[ 699]    08B9: A1 B0 03                              mov ax, totPrice
[ 700]    08BC: A3 B2 03                              mov prevPrice, ax
[ 701]    08BF: 01 1E B0 03                           add totPrice, bx
[ 702]        :                                       
[ 703]    08C3: B4 09                                 mov ah,9
[ 704]    08C5: BA 16 03                              lea dx, str20
[ 705]    08C8: CD 21                                 int 21h
[ 706]        :                                       
[ 707]    08CA: 33 C0                                 xor ax,ax
[ 708]        :                                       
[ 709]        :                                       
[ 710]    08CC: A1 B2 03                              mov ax,prevPrice
[ 711]    08CF: E8 88 00                              call decimalOutput
[ 712]        :                                       
[ 713]    08D2: B4 09                                 mov ah, 9
[ 714]    08D4: BA 30 03                              Lea dx,str21
[ 715]    08D7: CD 21                                 int 21h
[ 716]        :                                       
[ 717]    08D9: 33 C0                                 xor ax,ax
[ 718]        :                                       
[ 719]        :                                       
[ 720]    08DB: A1 B0 03                              mov ax, totPrice
[ 721]    08DE: E8 79 00                              call decimalOutput
[ 722]        :                                       
[ 723]    08E1: B4 09                                 mov ah,9
[ 724]    08E3: BA 46 03                              Lea dx,str22
[ 725]    08E6: CD 21                                 int 21h
[ 726]        :                                       
[ 727]    08E8: B4 09                                 mov ah,9
[ 728]    08EA: BA 60 03                              Lea dx,str23
[ 729]    08ED: CD 21                                 int 21h
[ 730]        :                                       
[ 731]    08EF: B4 01                                 mov ah,1
[ 732]    08F1: CD 21                                 int 21h
[ 733]        :                                       
[ 734]    08F3: 3C 31                                 cmp al,31h
[ 735]    08F5: 75 03 E9 84 FC                        je start
[ 736]        :                                       
[ 737]    08FA: B4 09                                 mov ah,9
[ 738]    08FC: BA 7E 03                              Lea dx,str24
[ 739]    08FF: CD 21                                 int 21h
[ 740]        :                                       
[ 741]    0901:                                       FExit:
[ 742]    0901: B4 4C                                 mov ah,4ch
[ 743]    0903: CD 21                                 int 21h
[ 744]        :                                       
[ 745]        :                                       main endp
[ 746]        :                                       
[ 747]        :                                       
[ 748]    0905:                                       decimalInput proc
[ 749]        :                                       
[ 750]    0905: 53                                    push bx
[ 751]    0906: 51                                    push cx
[ 752]    0907: 52                                    push dx
[ 753]    0908:                                       inputStart:
[ 754]        :                                       
[ 755]    0908: B4 02                                 mov ah, 2
[ 756]    090A: B2 20                                 mov dl, ' '
[ 757]    090C: CD 21                                 int 21h
[ 758]        :                                       
[ 759]    090E: 33 DB                                 xor bx, bx
[ 760]    0910: 33 C9                                 xor cx, cx
[ 761]        :                                       
[ 762]    0912: B4 01                                 mov ah, 1
[ 763]    0914: CD 21                                 int 21h
[ 764]        :                                       
[ 765]    0916: 3C 2D                                 cmp al, '-'
[ 766]    0918: 74 06                                 je minus
[ 767]        :                                       
[ 768]    091A: 3C 2B                                 cmp al, '+'
[ 769]    091C: 74 05                                 je plus
[ 770]    091E: EB 05                                 jmp repeat
[ 771]        :                                       
[ 772]    0920:                                       minus:
[ 773]    0920: B9 01 00                              mov cx, 1
[ 774]    0923:                                       plus:
[ 775]    0923: CD 21                                 int 21h
[ 776]        :                                       
[ 777]    0925:                                       repeat:
[ 778]        :                                       
[ 779]    0925: 3C 30                                 cmp al, '0'
[ 780]    0927: 7C 24                                 jnge nonDigit
[ 781]    0929: 3C 39                                 cmp al, '9'
[ 782]    092B: 7F 20                                 jnle nonDigit
[ 783]        :                                       
[ 784]    092D: 25 0F 00                              and ax, 000fh
[ 785]    0930: 50                                    push ax
[ 786]        :                                       
[ 787]    0931: B8 0A 00                              mov ax,10
[ 788]    0934: F7 E3                                 mul bx
[ 789]    0936: 5B                                    pop bx
[ 790]    0937: 03 D8                                 add bx, ax
[ 791]        :                                       
[ 792]    0939: B4 01                                 mov ah, 1
[ 793]    093B: CD 21                                 int 21h
[ 794]    093D: 3C 0D                                 cmp al, 0dh
[ 795]    093F: 75 E4                                 jne repeat
[ 796]        :                                       
[ 797]    0941: 8B C3                                 mov ax, bx
[ 798]    0943: 0B C9                                 or cx, cx
[ 799]        :                                       
[ 800]    0945: 74 02                                 je exit
[ 801]    0947: F7 D8                                 neg ax
[ 802]        :                                       
[ 803]    0949:                                       exit:
[ 804]        :                                       
[ 805]    0949: 5A                                    pop dx
[ 806]    094A: 59                                    pop cx
[ 807]    094B: 5B                                    pop bx
[ 808]    094C: C3                                    ret
[ 809]        :                                       
[ 810]    094D:                                       nonDigit:
[ 811]        :                                       
[ 812]    094D: B4 02                                 mov ah, 2
[ 813]    094F: B2 0D                                 mov dl, 0dh
[ 814]    0951: CD 21                                 int 21h
[ 815]    0953: B2 0A                                 mov dl, 0ah
[ 816]    0955: CD 21                                 int 21h
[ 817]    0957: EB AF                                 jmp inputStart
[ 818]    0959: C3                                    ret
[ 819]        :                                       decimalInput endp
[ 820]        :                                       
[ 821]        :                                       
[ 822]        :                                       
[ 823]    095A:                                       decimalOutput proc
[ 824]        :                                       
[ 825]    095A: 50                                    push  ax
[ 826]    095B: 53                                    push  bx
[ 827]    095C: 51                                    push  cx
[ 828]    095D: 52                                    push  dx
[ 829]        :                                       
[ 830]    095E: 0B C0                                 or ax, ax
[ 831]    0960: 7D 0A                                 jge IF
[ 832]        :                                       
[ 833]    0962: 50                                    push ax
[ 834]    0963: B2 20                                 mov dl, ' '
[ 835]    0965: B4 02                                 mov ah, 2
[ 836]    0967: CD 21                                 int 21h
[ 837]    0969: 58                                    pop ax
[ 838]    096A: F7 D8                                 neg ax
[ 839]        :                                       
[ 840]    096C:                                       IF:
[ 841]        :                                       
[ 842]    096C: 33 C9                                 xor cx, cx
[ 843]    096E: BB 0A 00                              mov  bx, 10d
[ 844]        :                                       
[ 845]    0971:                                       loopRepeat:
[ 846]        :                                       
[ 847]    0971: 33 D2                                 xor dx, dx
[ 848]    0973: F7 F3                                 div bx
[ 849]    0975: 52                                    push dx
[ 850]    0976: 41                                    inc cx
[ 851]        :                                       
[ 852]        :                                       
[ 853]    0977: 0B C0                                 or  ax, ax
[ 854]    0979: 75 F6                                 jne   loopRepeat
[ 855]        :                                       
[ 856]    097B: B4 02                                 mov   ah, 2
[ 857]        :                                       
[ 858]    097D:                                       printLoop:
[ 859]        :                                       
[ 860]    097D: 5A                                    pop  dx
[ 861]    097E: 80 CA 30                              or dl, 30h
[ 862]    0981: CD 21                                 int 21h
[ 863]    0983: E2 F8                                 loop  printLoop
[ 864]        :                                       
[ 865]    0985: 5A                                    pop dx
[ 866]    0986: 59                                    pop cx
[ 867]    0987: 5B                                    pop bx
[ 868]    0988: 58                                    pop ax
[ 869]        :                                       
[ 870]    0989: C3                                    ret
[ 871]        :                                       decimalOutput endp
[ 872]        :                                       
[ 873]        :                                       end main
[ 874]        :                                       
[ 875]        :                                       
[ 876]        :                                       
 
===================================================================================================
 
EXE HEADER - bytes from 0000 to 01FF inclusive.

0000: 4D      -   exe signature (M)
0001: 5A      -   exe signature (Z)
0002: 8A      -   bytes on last page (l.byte)
0003: 01      -   bytes on last page (h.byte)
0004: 06      -   512 byte pages in file (l.byte)
0005: 00      -   512 byte pages in file (h.byte)
0006: 01      -   relocations (l.byte)
0007: 00      -   relocations (h.byte)
0008: 20      -   paragraphs in header (l.byte)
0009: 00      -   paragraphs in header (h.byte)
000A: 00      -   minimum memory (l.byte)
000B: 00      -   minimum memory (h.byte)
000C: FF      -   maximum memory (l.byte)
000D: FF      -   maximum memory (h.byte)
000E: 00      -   SS - stack segment (l.byte)
000F: 00      -   SS - stack segment (h.byte)
0010: 00      -   SP - stack pointer (l.byte)
0011: 01      -   SP - stack pointer (h.byte)
0012: F7      -   check sum (l.byte)
0013: 91      -   check sum (h.byte)
0014: 00      -   IP - instruction pointer (l.byte)
0015: 00      -   IP - instruction pointer (h.byte)
0016: 56      -   CS - code segment (l.byte)
0017: 00      -   CS - code segment (h.byte)
0018: 1E      -   relocation table adress (l.byte)
0019: 00      -   relocation table adress (h.byte)
001A: 00      -   overlay number (l.byte)
001B: 00      -   overlay number (h.byte)
001C: 01      -   signature (l.byte)
001D: 00      -   signature (h.byte)
001E: 01      -   relocation table - offset inside segment (l.byte)
001F: 00      -   relocation table - offset inside segment (h.byte)
0020: 56      -   relocation table - segment anchor (l.byte)
0021: 00      -   relocation table - segment anchor (h.byte)
0022 to 01FF  -   reserved relocation area  (00) 




===================================================================================================
