EMU8086 GENERATED LISTING. MACHINE CODE <- SOURCE.
 
prac7.exe_ -- emu8086 assembler version: 4.08  
 
[ 4/5/2021  --  12:11:20 AM ] 
 
===================================================================================================
[LINE]     LOC: MACHINE CODE                          SOURCE
===================================================================================================
 
[   1]        :                                       ;part a
[   2]        :                                       .model small
[   3]        :                                       .stack 100h
[   4]        :                                       .data
[   5]    0100: 0A                                    A db 10
[   6]    0101: 14                                    B db 20
[   7]    0102: 12                                    C db 18
[   8]    0103: 12                                    D db 18
[   9]    0104: 56 61 6C 75 65 20 6F 66 20 41 20 3D   StringA db "Value of A = ",A,10,13,'$'
                20 00 0A 0D 24                      
[  10]    0115: 56 61 6C 75 65 20 6F 66 20 42 20 3D   StringB db "Value of B = ",B,10,13,'$'
                20 01 0A 0D 24                      
[  11]    0126: 56 61 6C 75 65 20 6F 66 20 43 20 3D   StringC db "Value of C = ",C,10,13,'$'
                20 02 0A 0D 24                      
[  12]        :                                       .code
[  13]    0140:                                       main proc
[  14]    0140: B8 10 00                              mov ax, @data
[  15]    0143: 8E D8                                 mov ds, ax
[  16]        :                                       
[  17]    0145: A0 00 00                              mov al, a
[  18]    0148: 3A 06 01 00                           cmp al, b
[  19]    014C: 7D 4F                                 jge end
[  20]    014E: 8A 1E 01 00                           mov bl, b
[  21]    0152: 3A 1E 02 00                           cmp bl, c
[  22]    0156: 7E 45                                 jle end
[  23]    0158: 8A 0E 02 00                           mov cl, c
[  24]    015C: 3A 0E 03 00                           cmp cl, d
[  25]    0160: 7F 3B                                 jg end
[  26]    0162: 2A D9                                 sub bl, cl
[  27]    0164: 88 1E 00 00                           mov a ,bl
[  28]        :                                       
[  29]    0168: B3 00                                 mov bl, 0
[  30]    016A: B9 04 00                              mov cx, 4
[  31]    016D:                                       for:
[  32]    016D: 80 C3 12                              add bl, 18
[  33]    0170: E2 FB                                 loop for
[  34]        :                                       
[  35]    0172: 00 1E 00 00                           add a, bl
[  36]        :                                       
[  37]    0176: B3 00                                 mov bl, 0
[  38]    0178: B9 06 00                              mov cx, 6
[  39]    017B:                                       for1:
[  40]    017B: 80 C3 12                              add bl,18
[  41]    017E: E2 FB                                 loop for1
[  42]        :                                       
[  43]    0180: 28 1E 00 00                           sub a, bl
[  44]        :                                       
[  45]    0184: B3 00                                 mov bl, 0
[  46]    0186: B3 14                                 mov bl, 20
[  47]    0188: 00 1E 00 00                           add a, bl
[  48]        :                                       
[  49]    018C: B4 09                                 mov ah, 9
[  50]    018E: BA 04 00                              lea dx, StringA
[  51]    0191: CD 21                                 int 21h
[  52]    0193: BA 15 00                              lea dx, StringB
[  53]    0196: CD 21                                 int 21h
[  54]    0198: BA 26 00                              lea dx, StringC
[  55]    019B: CD 21                                 int 21h
[  56]        :                                       
[  57]        :                                       
[  58]    019D:                                       end:
[  59]    019D: 8A 16 00 00                           mov dl, a
[  60]    01A1: B4 4C                                 mov ah, 4ch
[  61]    01A3: CD 21                                 int 21h
[  62]        :                                       
[  63]        :                                       main endp
[  64]        :                                       end main
[  65]        :                                       
[  66]        :                                       
[  67]        :                                       
 
===================================================================================================
 
EXE HEADER - bytes from 0000 to 01FF inclusive.

0000: 4D      -   exe signature (M)
0001: 5A      -   exe signature (Z)
0002: A5      -   bytes on last page (l.byte)
0003: 01      -   bytes on last page (h.byte)
0004: 02      -   512 byte pages in file (l.byte)
0005: 00      -   512 byte pages in file (h.byte)
0006: 01      -   relocations (l.byte)
0007: 00      -   relocations (h.byte)
0008: 20      -   paragraphs in header (l.byte)
0009: 00      -   paragraphs in header (h.byte)
000A: 00      -   minimum memory (l.byte)
000B: 00      -   minimum memory (h.byte)
000C: FF      -   maximum memory (l.byte)
000D: FF      -   maximum memory (h.byte)
000E: 00      -   SS - stack segment (l.byte)
000F: 00      -   SS - stack segment (h.byte)
0010: 00      -   SP - stack pointer (l.byte)
0011: 01      -   SP - stack pointer (h.byte)
0012: 50      -   check sum (l.byte)
0013: 9E      -   check sum (h.byte)
0014: 00      -   IP - instruction pointer (l.byte)
0015: 00      -   IP - instruction pointer (h.byte)
0016: 14      -   CS - code segment (l.byte)
0017: 00      -   CS - code segment (h.byte)
0018: 1E      -   relocation table adress (l.byte)
0019: 00      -   relocation table adress (h.byte)
001A: 00      -   overlay number (l.byte)
001B: 00      -   overlay number (h.byte)
001C: 01      -   signature (l.byte)
001D: 00      -   signature (h.byte)
001E: 01      -   relocation table - offset inside segment (l.byte)
001F: 00      -   relocation table - offset inside segment (h.byte)
0020: 14      -   relocation table - segment anchor (l.byte)
0021: 00      -   relocation table - segment anchor (h.byte)
0022 to 01FF  -   reserved relocation area  (00) 




===================================================================================================
