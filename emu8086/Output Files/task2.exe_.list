EMU8086 GENERATED LISTING. MACHINE CODE <- SOURCE.
 
task2.exe_ -- emu8086 assembler version: 4.08  
 
[ 3/16/2021  --  10:18:06 AM ] 
 
===================================================================================================
[LINE]     LOC: MACHINE CODE                          SOURCE
===================================================================================================
 
[   1]        :                                       ; lab 6 and  7 task 2
[   2]        :                                       .model small
[   3]        :                                       .stack 100h
[   4]        :                                       .data
[   5]        :                                       .code
[   6]    0100: B8 10 00                              mov ax, @data
[   7]    0103: 8E D8                                 mov ds, ax
[   8]    0105:                                       main proc
[   9]        :                                       
[  10]        :                                       
[  11]        :                                       ;task 2.1
[  12]        :                                       ; cmp ax, 0
[  13]        :                                       ; jl IF
[  14]        :                                       
[  15]        :                                       ; mov ah, 4ch
[  16]        :                                       ; int 21h
[  17]        :                                       
[  18]        :                                       ; IF:
[  19]        :                                       ;     mov bx, -1
[  20]        :                                       
[  21]        :                                       ;task 2.2
[  22]        :                                       
[  23]    0105: 3C 00                                 cmp al, 0
[  24]    0107: 7C 02                                 jl IF
[  25]        :                                       
[  26]    0109: B4 00                                 mov ah, 0
[  27]        :                                       
[  28]        :                                       ;mov ah, 4ch
[  29]        :                                       ;int 21h
[  30]        :                                       
[  31]    010B:                                       IF:
[  32]    010B: B4 FF                                 mov ah, 0FFh
[  33]        :                                       
[  34]        :                                       
[  35]        :                                       
[  36]        :                                       
[  37]        :                                       
[  38]        :                                       main endp
[  39]    010D: B4 4C                                 mov ah, 4ch
[  40]    010F: CD 21                                 int 21h
[  41]        :                                       end main
[  42]        :                                       
 
===================================================================================================
 
EXE HEADER - bytes from 0000 to 01FF inclusive.

0000: 4D      -   exe signature (M)
0001: 5A      -   exe signature (Z)
0002: 11      -   bytes on last page (l.byte)
0003: 01      -   bytes on last page (h.byte)
0004: 02      -   512 byte pages in file (l.byte)
0005: 00      -   512 byte pages in file (h.byte)
0006: 01      -   relocations (l.byte)
0007: 00      -   relocations (h.byte)
0008: 20      -   paragraphs in header (l.byte)
0009: 00      -   paragraphs in header (h.byte)
000A: 00      -   minimum memory (l.byte)
000B: 00      -   minimum memory (h.byte)
000C: FF      -   maximum memory (l.byte)
000D: FF      -   maximum memory (h.byte)
000E: 00      -   SS - stack segment (l.byte)
000F: 00      -   SS - stack segment (h.byte)
0010: 00      -   SP - stack pointer (l.byte)
0011: 01      -   SP - stack pointer (h.byte)
0012: 3C      -   check sum (l.byte)
0013: 37      -   check sum (h.byte)
0014: 05      -   IP - instruction pointer (l.byte)
0015: 00      -   IP - instruction pointer (h.byte)
0016: 10      -   CS - code segment (l.byte)
0017: 00      -   CS - code segment (h.byte)
0018: 1E      -   relocation table adress (l.byte)
0019: 00      -   relocation table adress (h.byte)
001A: 00      -   overlay number (l.byte)
001B: 00      -   overlay number (h.byte)
001C: 01      -   signature (l.byte)
001D: 00      -   signature (h.byte)
001E: 01      -   relocation table - offset inside segment (l.byte)
001F: 00      -   relocation table - offset inside segment (h.byte)
0020: 10      -   relocation table - segment anchor (l.byte)
0021: 00      -   relocation table - segment anchor (h.byte)
0022 to 01FF  -   reserved relocation area  (00) 




===================================================================================================
