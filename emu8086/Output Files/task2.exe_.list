EMU8086 GENERATED LISTING. MACHINE CODE <- SOURCE.
 
task2.exe_ -- emu8086 assembler version: 4.08  
 
[ 4/30/2021  --  9:24:52 AM ] 
 
===================================================================================================
[LINE]     LOC: MACHINE CODE                          SOURCE
===================================================================================================
 
[   1]        :                                       .model small
[   2]        :                                       .stack 100h
[   3]        :                                       .data
[   4]    0100: 45 6E 74 65 72 20 73 74 72 69 6E 67   msg1 db "Enter string: $"
                3A 20 24                            
[   5]    010F: 00 00 00 00 00 00 00 00 00 00         str1 db 10 dup(0)
[   6]        :                                       .code
[   7]    0120:                                       main proc
[   8]    0120: B8 10 00                              mov ax, @data
[   9]    0123: 8E D8                                 mov ds, ax
[  10]        :                                       
[  11]    0125: B4 01                                 mov ah, 1
[  12]        :                                       
[  13]    0127: BE 0F 00                              lea si, str1
[  14]        :                                       
[  15]    012A: CD 21                                 int 21h
[  16]        :                                       
[  17]        :                                       
[  18]        :                                       
[  19]    012C:                                       while:
[  20]        :                                       
[  21]    012C: 3C 0D                                 cmp al, 13
[  22]    012E: 74 10                                 je end
[  23]        :                                       
[  24]    0130:                                       if:
[  25]        :                                       
[  26]    0130: 3C 08                                 cmp al, 8
[  27]    0132: 75 05                                 jne else
[  28]        :                                       
[  29]    0134: 4E                                    dec si
[  30]        :                                       
[  31]    0135: CD 21                                 int 21h
[  32]        :                                       
[  33]    0137: EB F3                                 jmp while
[  34]        :                                       
[  35]    0139:                                       else:
[  36]        :                                       
[  37]    0139: 88 04                                 mov [si], al
[  38]        :                                       
[  39]    013B: 46                                    inc si
[  40]        :                                       
[  41]    013C: CD 21                                 int 21h
[  42]        :                                       
[  43]    013E: EB EC                                 jmp while
[  44]        :                                       
[  45]    0140:                                       end:
[  46]    0140: B4 4C                                 mov ah, 4ch
[  47]    0142: CD 21                                 int 21h
[  48]        :                                       
[  49]        :                                       
[  50]        :                                       main endp
[  51]        :                                       end main
[  52]        :                                       
 
===================================================================================================
 
EXE HEADER - bytes from 0000 to 01FF inclusive.

0000: 4D      -   exe signature (M)
0001: 5A      -   exe signature (Z)
0002: 44      -   bytes on last page (l.byte)
0003: 01      -   bytes on last page (h.byte)
0004: 02      -   512 byte pages in file (l.byte)
0005: 00      -   512 byte pages in file (h.byte)
0006: 01      -   relocations (l.byte)
0007: 00      -   relocations (h.byte)
0008: 20      -   paragraphs in header (l.byte)
0009: 00      -   paragraphs in header (h.byte)
000A: 00      -   minimum memory (l.byte)
000B: 00      -   minimum memory (h.byte)
000C: FF      -   maximum memory (l.byte)
000D: FF      -   maximum memory (h.byte)
000E: 00      -   SS - stack segment (l.byte)
000F: 00      -   SS - stack segment (h.byte)
0010: 00      -   SP - stack pointer (l.byte)
0011: 01      -   SP - stack pointer (h.byte)
0012: BF      -   check sum (l.byte)
0013: BB      -   check sum (h.byte)
0014: 00      -   IP - instruction pointer (l.byte)
0015: 00      -   IP - instruction pointer (h.byte)
0016: 12      -   CS - code segment (l.byte)
0017: 00      -   CS - code segment (h.byte)
0018: 1E      -   relocation table adress (l.byte)
0019: 00      -   relocation table adress (h.byte)
001A: 00      -   overlay number (l.byte)
001B: 00      -   overlay number (h.byte)
001C: 01      -   signature (l.byte)
001D: 00      -   signature (h.byte)
001E: 01      -   relocation table - offset inside segment (l.byte)
001F: 00      -   relocation table - offset inside segment (h.byte)
0020: 12      -   relocation table - segment anchor (l.byte)
0021: 00      -   relocation table - segment anchor (h.byte)
0022 to 01FF  -   reserved relocation area  (00) 




===================================================================================================
