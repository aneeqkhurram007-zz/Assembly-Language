EMU8086 GENERATED LISTING. MACHINE CODE <- SOURCE.
 
prac5(loop).com_ -- emu8086 assembler version: 4.08  
 
[ 3/27/2021  --  11:44:54 AM ] 
 
===================================================================================================
[LINE]     LOC: MACHINE CODE                          SOURCE
===================================================================================================
 
[   1]        :                                       org 100h
[   2]    0100: EB 04                                 .data
[   3]    0102: 00 00                                 i dw 0
[   4]    0104: 00 00                                 j dw 0
[   5]    0106:                                       .code
[   6]    0106:                                       main proc
[   7]    0106: 8C C8                                 mov ax, @data
[   8]    0108: 8E D8                                 mov ds, ax
[   9]    010A: B4 02                                 mov ah, 2
[  10]    010C: B9 00 00                              mov cx, 0; cx == i
[  11]    010F:                                       for_outer:
[  12]    010F: 83 F9 05                              cmp cx, 5
[  13]    0112: 7D 42                                 jge end_for_outer
[  14]    0114: 89 0E 02 01                           mov i, cx
[  15]    0118: B9 05 00                              mov cx, 5
[  16]    011B:                                       for_inner_1:
[  17]    011B: 3B 0E 02 01                           cmp cx, i
[  18]    011F: 7E 06                                 jle end_for_inner_1
[  19]    0121: B2 20                                 mov dl, 32
[  20]    0123: CD 21                                 int 21h
[  21]    0125: E2 F4                                 loop for_inner_1
[  22]    0127:                                       end_for_inner_1:
[  23]        :                                       
[  24]    0127: 89 0E 04 01                           mov j, cx
[  25]    012B: 01 0E 04 01                           add j, cx
[  26]    012F: FF 06 04 01                           inc j
[  27]    0133: B9 00 00                              mov cx, 0
[  28]    0136:                                       for_inner_2:
[  29]    0136: 3B 0E 04 01                           cmp cx, j
[  30]    013A: 7D 09                                 jge end_for_inner_2
[  31]    013C: B2 2A                                 mov dl, '*'
[  32]    013E: CD 21                                 int 21h
[  33]    0140: 83 C1 02                              add cx, 2
[  34]    0143: E2 F1                                 loop for_inner_2
[  35]        :                                       
[  36]    0145:                                       end_for_inner_2:
[  37]    0145: B2 0A                                 mov dl, 0Ah
[  38]    0147: CD 21                                 int 21h
[  39]    0149: B2 0D                                 mov dl, 0Dh
[  40]    014B: CD 21                                 int 21h
[  41]        :                                       
[  42]    014D: 8B 0E 02 01                           mov cx, i
[  43]    0151: 83 C1 02                              add cx, 2
[  44]    0154: E2 B9                                 loop for_outer
[  45]    0156:                                       end_for_outer:
[  46]    0156: B4 4C                                 mov ah, 4ch
[  47]    0158: CD 21                                 int 21h
[  48]        :                                       
[  49]        :                                       main endp
[  50]        :                                       
[  51]    015A: C3                                    ret
[  52]        :                                       
 
===================================================================================================
 




===================================================================================================
