EMU8086 GENERATED LISTING. MACHINE CODE <- SOURCE.
 
task3.exe_ -- emu8086 assembler version: 4.08  
 
[ 3/21/2021  --  7:48:00 PM ] 
 
===================================================================================================
[LINE]     LOC: MACHINE CODE                          SOURCE
===================================================================================================
 
[   1]        :                                       ; task3
[   2]        :                                       .model small
[   3]        :                                       .stack 100h
[   4]        :                                       .data
[   5]    0100: 50 6C 65 61 73 65 20 65 6E 74 65 72   string db 'Please enter your password.$'
                20 79 6F 75 72 20 70 61 73 73 77 6F 
                72 64 2E 24                         
[   6]        :                                       .code
[   7]    0120:                                       main proc
[   8]        :                                       
[   9]    0120: B8 10 00                              mov ax, @data
[  10]    0123: 8E D8                                 mov ds, ax
[  11]        :                                       
[  12]    0125: B4 09                                 mov ah, 9
[  13]    0127: BA 00 00                              lea dx, string
[  14]    012A: CD 21                                 int 21h
[  15]        :                                       
[  16]    012C: B4 02                                 mov ah, 2
[  17]    012E: B2 0A                                 mov dl, 0Ah
[  18]    0130: CD 21                                 int 21h
[  19]        :                                       
[  20]    0132: B2 0D                                 mov dl, 0Dh
[  21]    0134: CD 21                                 int 21h
[  22]        :                                       
[  23]    0136: B4 01                                 mov ah, 1
[  24]    0138: B9 05 00                              mov cx, 5
[  25]        :                                       
[  26]    013B:                                       for:
[  27]    013B: CD 21                                 int 21h
[  28]    013D: E2 FC                                 loop for
[  29]        :                                       
[  30]    013F: B9 05 00                              mov cx, 5
[  31]        :                                       
[  32]    0142: B4 02                                 mov ah, 2
[  33]    0144: B2 0D                                 mov dl, 0Dh
[  34]    0146: CD 21                                 int 21h
[  35]        :                                       
[  36]    0148: B2 58                                 mov dl, 'X'
[  37]        :                                       
[  38]    014A:                                       for1:
[  39]    014A: CD 21                                 int 21h
[  40]    014C: E2 FC                                 loop for1
[  41]        :                                       
[  42]        :                                       main endp
[  43]        :                                       
[  44]    014E: B4 4C                                 mov ah, 4ch
[  45]    0150: CD 21                                 int 21h
[  46]        :                                       
[  47]        :                                       end main
[  48]        :                                       
 
===================================================================================================
 
EXE HEADER - bytes from 0000 to 01FF inclusive.

0000: 4D      -   exe signature (M)
0001: 5A      -   exe signature (Z)
0002: 52      -   bytes on last page (l.byte)
0003: 01      -   bytes on last page (h.byte)
0004: 02      -   512 byte pages in file (l.byte)
0005: 00      -   512 byte pages in file (h.byte)
0006: 01      -   relocations (l.byte)
0007: 00      -   relocations (h.byte)
0008: 20      -   paragraphs in header (l.byte)
0009: 00      -   paragraphs in header (h.byte)
000A: 00      -   minimum memory (l.byte)
000B: 00      -   minimum memory (h.byte)
000C: FF      -   maximum memory (l.byte)
000D: FF      -   maximum memory (h.byte)
000E: 00      -   SS - stack segment (l.byte)
000F: 00      -   SS - stack segment (h.byte)
0010: 00      -   SP - stack pointer (l.byte)
0011: 01      -   SP - stack pointer (h.byte)
0012: 28      -   check sum (l.byte)
0013: 07      -   check sum (h.byte)
0014: 00      -   IP - instruction pointer (l.byte)
0015: 00      -   IP - instruction pointer (h.byte)
0016: 12      -   CS - code segment (l.byte)
0017: 00      -   CS - code segment (h.byte)
0018: 1E      -   relocation table adress (l.byte)
0019: 00      -   relocation table adress (h.byte)
001A: 00      -   overlay number (l.byte)
001B: 00      -   overlay number (h.byte)
001C: 01      -   signature (l.byte)
001D: 00      -   signature (h.byte)
001E: 01      -   relocation table - offset inside segment (l.byte)
001F: 00      -   relocation table - offset inside segment (h.byte)
0020: 12      -   relocation table - segment anchor (l.byte)
0021: 00      -   relocation table - segment anchor (h.byte)
0022 to 01FF  -   reserved relocation area  (00) 




===================================================================================================
