EMU8086 GENERATED LISTING. MACHINE CODE <- SOURCE.
 
task1.exe_ -- emu8086 assembler version: 4.08  
 
[ 4/29/2021  --  10:24:13 AM ] 
 
===================================================================================================
[LINE]     LOC: MACHINE CODE                          SOURCE
===================================================================================================
 
[   1]        :                                       .model small
[   2]        :                                       .stack 100h
[   3]        :                                       .data
[   4]    0100: 0A 0D 52 65 76 65 72 73 65 3A 20 24   msg2 db 0Ah,0Dh,"Reverse: $"
                                                    
[   5]    010C: 41 6E 65 65 71 20 4B 68 75 72 72 61   str1 db "Aneeq Khurram$"
                6D 24                               
[   6]    011A: 24 24 24 24 24 24 24 24 24 24 24 24   str2 db 16 dup('$')
                24 24 24 24                         
[   7]        :                                       .code
[   8]    0130:                                       main proc
[   9]    0130: B8 10 00                              mov ax, @data
[  10]    0133: 8E D8                                 mov ds, ax
[  11]    0135: 8E C0                                 mov es, ax
[  12]        :                                       
[  13]        :                                       
[  14]        :                                       
[  15]    0137:                                       while:
[  16]    0137: 80 3C 24                              cmp [si], '$'
[  17]    013A: 74 04                                 je end_while
[  18]    013C: 46                                    inc si
[  19]    013D: 43                                    inc bx
[  20]    013E: EB F7                                 jmp while
[  21]        :                                       
[  22]    0140:                                       end_while:
[  23]        :                                       
[  24]    0140: FD                                    std
[  25]        :                                       
[  26]    0141: 8D 77 0C                              lea si, str1 + bx
[  27]    0144: BF 1A 00                              lea di, str2
[  28]        :                                       
[  29]    0147: 8B CB                                 mov cx, bx
[  30]    0149: 41                                    inc cx
[  31]    014A:                                       for:
[  32]        :                                       
[  33]    014A: A4                                    movsb
[  34]        :                                       
[  35]    014B: 83 C7 02                              add di, 2
[  36]        :                                       
[  37]    014E: E2 FA                                 loop for
[  38]        :                                       
[  39]    0150: A4                                    movsb
[  40]        :                                       
[  41]    0151: B4 09                                 mov ah, 9
[  42]        :                                       
[  43]    0153: BA 00 00                              lea dx, msg2
[  44]    0156: CD 21                                 int 21h
[  45]        :                                       
[  46]    0158: BA 1A 00                              lea dx, str2
[  47]    015B: CD 21                                 int 21h
[  48]        :                                       
[  49]        :                                       
[  50]        :                                       
[  51]    015D: B4 4C                                 mov ah, 4ch
[  52]    015F: CD 21                                 int 21h
[  53]        :                                       
[  54]        :                                       
[  55]        :                                       
[  56]        :                                       
[  57]        :                                       main endp
[  58]        :                                       end main
[  59]        :                                       
 
===================================================================================================
 
EXE HEADER - bytes from 0000 to 01FF inclusive.

0000: 4D      -   exe signature (M)
0001: 5A      -   exe signature (Z)
0002: 61      -   bytes on last page (l.byte)
0003: 01      -   bytes on last page (h.byte)
0004: 02      -   512 byte pages in file (l.byte)
0005: 00      -   512 byte pages in file (h.byte)
0006: 01      -   relocations (l.byte)
0007: 00      -   relocations (h.byte)
0008: 20      -   paragraphs in header (l.byte)
0009: 00      -   paragraphs in header (h.byte)
000A: 00      -   minimum memory (l.byte)
000B: 00      -   minimum memory (h.byte)
000C: FF      -   maximum memory (l.byte)
000D: FF      -   maximum memory (h.byte)
000E: 00      -   SS - stack segment (l.byte)
000F: 00      -   SS - stack segment (h.byte)
0010: 00      -   SP - stack pointer (l.byte)
0011: 01      -   SP - stack pointer (h.byte)
0012: 0C      -   check sum (l.byte)
0013: 4A      -   check sum (h.byte)
0014: 00      -   IP - instruction pointer (l.byte)
0015: 00      -   IP - instruction pointer (h.byte)
0016: 13      -   CS - code segment (l.byte)
0017: 00      -   CS - code segment (h.byte)
0018: 1E      -   relocation table adress (l.byte)
0019: 00      -   relocation table adress (h.byte)
001A: 00      -   overlay number (l.byte)
001B: 00      -   overlay number (h.byte)
001C: 01      -   signature (l.byte)
001D: 00      -   signature (h.byte)
001E: 01      -   relocation table - offset inside segment (l.byte)
001F: 00      -   relocation table - offset inside segment (h.byte)
0020: 13      -   relocation table - segment anchor (l.byte)
0021: 00      -   relocation table - segment anchor (h.byte)
0022 to 01FF  -   reserved relocation area  (00) 




===================================================================================================
