EMU8086 GENERATED LISTING. MACHINE CODE <- SOURCE.
 
task1.exe_ -- emu8086 assembler version: 4.08  
 
[ 4/22/2021  --  4:05:18 AM ] 
 
===================================================================================================
[LINE]     LOC: MACHINE CODE                          SOURCE
===================================================================================================
 
[   1]        :                                       ;task1
[   2]        :                                       .model small
[   3]        :                                       .stack 100h
[   4]        :                                       .data
[   5]    0100: 10 20 30                              byte_array db 10h,20h,30h
[   6]    0103: 00 10 00 20 00 30                     word_Array dw 1000h,2000h,3000h
[   7]    0109: 00 00 00 00                           sums dw 0,0
[   8]        :                                       .code
[   9]    0110:                                       main proc
[  10]    0110: B8 10 00                              mov ax, @data
[  11]    0113: 8E D8                                 mov ds, ax
[  12]        :                                       
[  13]    0115: B9 03 00                              mov cx, 3
[  14]    0118: BE 00 00                              lea si, byte_array
[  15]    011B:                                       loopo:
[  16]    011B: 02 14                                 add dl, [si]
[  17]    011D: 46                                    inc si
[  18]    011E: E2 FB                                 loop loopo
[  19]        :                                       
[  20]    0120: 89 16 09 00                           mov sums[0], dx
[  21]        :                                       
[  22]        :                                       
[  23]    0124: BB 04 00                              mov bx, 4
[  24]        :                                       
[  25]    0127: BA 00 00                              mov dx, 0
[  26]        :                                       
[  27]    012A:                                       while:
[  28]        :                                       
[  29]    012A: 83 FB 00                              cmp bx, 0
[  30]    012D: 7C 08                                 jl end
[  31]        :                                       
[  32]    012F: 03 57 03                              add dx, word_Array[bx]
[  33]    0132: 83 EB 02                              sub bx, 2
[  34]        :                                       
[  35]    0135: EB F3                                 jmp while
[  36]        :                                       
[  37]        :                                       
[  38]        :                                       
[  39]        :                                       
[  40]        :                                       main endp
[  41]    0137:                                       end:
[  42]    0137: 89 16 0A 00                           mov sums[1], dx
[  43]    013B: 8B 0E 09 00                           mov cx, sums[0]
[  44]    013F: B4 4C                                 mov ah, 4ch
[  45]    0141: CD 21                                 int 21h
[  46]        :                                       end main
[  47]        :                                       
 
===================================================================================================
 
EXE HEADER - bytes from 0000 to 01FF inclusive.

0000: 4D      -   exe signature (M)
0001: 5A      -   exe signature (Z)
0002: 43      -   bytes on last page (l.byte)
0003: 01      -   bytes on last page (h.byte)
0004: 02      -   512 byte pages in file (l.byte)
0005: 00      -   512 byte pages in file (h.byte)
0006: 01      -   relocations (l.byte)
0007: 00      -   relocations (h.byte)
0008: 20      -   paragraphs in header (l.byte)
0009: 00      -   paragraphs in header (h.byte)
000A: 00      -   minimum memory (l.byte)
000B: 00      -   minimum memory (h.byte)
000C: FF      -   maximum memory (l.byte)
000D: FF      -   maximum memory (h.byte)
000E: 00      -   SS - stack segment (l.byte)
000F: 00      -   SS - stack segment (h.byte)
0010: 00      -   SP - stack pointer (l.byte)
0011: 01      -   SP - stack pointer (h.byte)
0012: EC      -   check sum (l.byte)
0013: E7      -   check sum (h.byte)
0014: 00      -   IP - instruction pointer (l.byte)
0015: 00      -   IP - instruction pointer (h.byte)
0016: 11      -   CS - code segment (l.byte)
0017: 00      -   CS - code segment (h.byte)
0018: 1E      -   relocation table adress (l.byte)
0019: 00      -   relocation table adress (h.byte)
001A: 00      -   overlay number (l.byte)
001B: 00      -   overlay number (h.byte)
001C: 01      -   signature (l.byte)
001D: 00      -   signature (h.byte)
001E: 01      -   relocation table - offset inside segment (l.byte)
001F: 00      -   relocation table - offset inside segment (h.byte)
0020: 11      -   relocation table - segment anchor (l.byte)
0021: 00      -   relocation table - segment anchor (h.byte)
0022 to 01FF  -   reserved relocation area  (00) 




===================================================================================================
