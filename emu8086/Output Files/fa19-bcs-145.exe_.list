EMU8086 GENERATED LISTING. MACHINE CODE <- SOURCE.
 
fa19-bcs-145.exe_ -- emu8086 assembler version: 4.08  
 
[ 6/7/2021  --  2:41:08 AM ] 
 
===================================================================================================
[LINE]     LOC: MACHINE CODE                          SOURCE
===================================================================================================
 
[   1]        :                                       .model small
[   2]        :                                       .stack 100h
[   3]        :                                       .data
[   4]        :                                       
[   5]    0100: 41 6E 65 65 71 24                     String db "Aneeq$"
[   6]    0106: 05                                    stringCount db 5
[   7]    0107: 0A 0D 45 6E 74 65 72 20 6E 75 6D 62   msg db 10,13,"Enter number of bytes to be removed: $"
                65 72 20 6F 66 20 62 79 74 65 73 20 
                74 6F 20 62 65 20 72 65 6D 6F 76 65 
                64 3A 20 24                         
[   8]    012F: 00                                    N db ?
[   9]    0130: 0A 0D 45 6E 74 65 72 20 73 74 61 72   msg1 db 10,13,"Enter starting position: $"
                74 69 6E 67 20 70 6F 73 69 74 69 6F 
                6E 3A 20 24                         
[  10]    014C: 00                                    S db ?
[  11]        :                                       
[  12]        :                                       
[  13]        :                                       .code
[  14]    0150:                                       main proc
[  15]    0150: B8 10 00                              mov ax, @data
[  16]    0153: 8E D8                                 mov ds, ax
[  17]    0155: 8E C0                                 mov es, ax
[  18]    0157:                                       again:
[  19]    0157: B4 09                                 mov ah, 9
[  20]    0159: BA 07 00                              lea dx, msg
[  21]    015C: CD 21                                 int 21h
[  22]        :                                       
[  23]    015E: B4 01                                 mov ah, 1
[  24]    0160: CD 21                                 int 21h
[  25]        :                                       
[  26]    0162: 2C 30                                 sub al, 48
[  27]    0164: A2 2F 00                              mov N, al
[  28]        :                                       
[  29]    0167: 3A 06 06 00                           cmp al, stringCount
[  30]    016B: 7D EA                                 jge again
[  31]        :                                       
[  32]    016D: B4 09                                 mov ah, 9
[  33]    016F: BA 30 00                              lea dx, msg1
[  34]    0172: CD 21                                 int 21h
[  35]        :                                       
[  36]    0174: B4 01                                 mov ah, 1
[  37]    0176: CD 21                                 int 21h
[  38]        :                                       
[  39]    0178: 2C 30                                 sub al, 48
[  40]    017A: A2 4C 00                              mov S, al
[  41]        :                                       
[  42]    017D: E8 00 00                              call delete
[  43]        :                                       
[  44]        :                                       
[  45]        :                                       
[  46]        :                                       main endp
[  47]        :                                       
[  48]    0180:                                       delete proc
[  49]        :                                       
[  50]    0180: B4 02                                 mov ah, 2
[  51]        :                                       
[  52]    0182: B2 0A                                 mov dl, 10
[  53]    0184: CD 21                                 int 21h
[  54]        :                                       
[  55]    0186: B2 0D                                 mov dl, 13
[  56]    0188: CD 21                                 int 21h
[  57]        :                                       
[  58]        :                                       
[  59]    018A: B4 09                                 mov ah, 9
[  60]    018C: BA 00 00                              lea dx, String
[  61]    018F: CD 21                                 int 21h
[  62]        :                                       
[  63]        :                                       
[  64]        :                                       
[  65]    0191: BB 00 00                              mov bx, 0
[  66]        :                                       
[  67]    0194: B1 00                                 mov cl, 0
[  68]    0196: 8A 0E 2F 00                           mov cl, N
[  69]        :                                       
[  70]    019A: BA 00 00                              mov dx, 0
[  71]    019D: 8A 16 4C 00                           mov dl, S
[  72]        :                                       
[  73]    01A1:                                       while:
[  74]        :                                       
[  75]    01A1: 83 FB 05                              cmp bx, 05
[  76]    01A4: 7D 0B                                 jge exit
[  77]        :                                       
[  78]    01A6: 3B DA                                 cmp bx, dx
[  79]    01A8: 7C 03                                 jl jump
[  80]        :                                       
[  81]    01AA: C6 04 24                              mov [si], '$'
[  82]        :                                       
[  83]    01AD:                                       jump:
[  84]        :                                       
[  85]    01AD: 43                                    inc bx
[  86]    01AE: 46                                    inc si
[  87]    01AF: EB F0                                 jmp while
[  88]        :                                       
[  89]    01B1:                                       exit:
[  90]        :                                       
[  91]        :                                       
[  92]        :                                       
[  93]    01B1: B4 02                                 mov ah, 2
[  94]        :                                       
[  95]    01B3: B2 0A                                 mov dl, 10
[  96]    01B5: CD 21                                 int 21h
[  97]        :                                       
[  98]    01B7: B2 0D                                 mov dl, 13
[  99]    01B9: CD 21                                 int 21h
[ 100]        :                                       
[ 101]    01BB: BE 00 00                              mov si, 0
[ 102]        :                                       
[ 103]    01BE:                                       print:
[ 104]        :                                       
[ 105]    01BE: 80 3C 24                              cmp [si], '$'
[ 106]    01C1: 74 08                                 je end
[ 107]        :                                       
[ 108]    01C3: 8A 14                                 mov dl, [si]
[ 109]    01C5: CD 21                                 int 21h
[ 110]        :                                       
[ 111]    01C7: 46                                    inc si
[ 112]        :                                       
[ 113]    01C8: EB F4                                 jmp print
[ 114]        :                                       
[ 115]    01CA: C3                                    ret
[ 116]        :                                       
[ 117]        :                                       delete endp
[ 118]    01CB:                                       end:
[ 119]    01CB: B4 4C                                 mov ah, 4ch
[ 120]    01CD: CD 21                                 int 21h
[ 121]        :                                       
[ 122]        :                                       
[ 123]        :                                       end main
[ 124]        :                                       
[ 125]        :                                       
 
===================================================================================================
 
EXE HEADER - bytes from 0000 to 01FF inclusive.

0000: 4D      -   exe signature (M)
0001: 5A      -   exe signature (Z)
0002: CF      -   bytes on last page (l.byte)
0003: 01      -   bytes on last page (h.byte)
0004: 02      -   512 byte pages in file (l.byte)
0005: 00      -   512 byte pages in file (h.byte)
0006: 01      -   relocations (l.byte)
0007: 00      -   relocations (h.byte)
0008: 20      -   paragraphs in header (l.byte)
0009: 00      -   paragraphs in header (h.byte)
000A: 00      -   minimum memory (l.byte)
000B: 00      -   minimum memory (h.byte)
000C: FF      -   maximum memory (l.byte)
000D: FF      -   maximum memory (h.byte)
000E: 00      -   SS - stack segment (l.byte)
000F: 00      -   SS - stack segment (h.byte)
0010: 00      -   SP - stack pointer (l.byte)
0011: 01      -   SP - stack pointer (h.byte)
0012: 41      -   check sum (l.byte)
0013: BA      -   check sum (h.byte)
0014: 00      -   IP - instruction pointer (l.byte)
0015: 00      -   IP - instruction pointer (h.byte)
0016: 15      -   CS - code segment (l.byte)
0017: 00      -   CS - code segment (h.byte)
0018: 1E      -   relocation table adress (l.byte)
0019: 00      -   relocation table adress (h.byte)
001A: 00      -   overlay number (l.byte)
001B: 00      -   overlay number (h.byte)
001C: 01      -   signature (l.byte)
001D: 00      -   signature (h.byte)
001E: 01      -   relocation table - offset inside segment (l.byte)
001F: 00      -   relocation table - offset inside segment (h.byte)
0020: 15      -   relocation table - segment anchor (l.byte)
0021: 00      -   relocation table - segment anchor (h.byte)
0022 to 01FF  -   reserved relocation area  (00) 




===================================================================================================
